--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         6291456 B, 64 B, 12-way associative
Command:          ./a.out
Data file:        cachegrind.out.25374
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
         Ir      I1mr  ILmr          Dr    D1mr   DLmr         Dw    D1mw   DLmw 
--------------------------------------------------------------------------------
292,481,214 6,191,652 7,601 139,472,470 457,140 14,065 29,240,142 166,044 30,291  PROGRAM TOTALS

--------------------------------------------------------------------------------
        Ir      I1mr  ILmr         Dr    D1mr  DLmr        Dw   D1mw   DLmw  file:function
--------------------------------------------------------------------------------
40,486,721   104,766    11 21,012,538   5,685     0 2,062,962      0      0  ???:denseGETRS
26,088,832    49,058    14 13,697,320       0     0 2,395,022     75      0  ???:denseGETRF
22,212,460   933,857   112 10,798,467 134,909     0 1,271,195 32,514      0  /home/kwoksun2/dengo/dengo-project-dengo-ed14369817a2/dengo_data_structure/Untitled Folder/serial_performance_grid/eqH2/final/new/new__solver.C:new__interpolate_rates(new__data*, int)
21,061,694 1,161,414   138 11,293,564   2,158     1 2,462,104    802      0  /home/kwoksun2/dengo/dengo-project-dengo-ed14369817a2/dengo_data_structure/Untitled Folder/serial_performance_grid/eqH2/final/new/new__solver.C:calculate_rhs_new_(double, _generic_N_Vector*, _generic_N_Vector*, void*)
16,609,186   121,900    35  3,243,694  29,465   623 1,561,873      5      0  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_pow.c:__ieee754_pow_sse2
14,601,216    20,370     5  9,516,864       8     0   505,176      0      0  ???:SUNMatScaleAddI_Dense
14,212,646 1,125,978   497  7,960,981   2,584     0 1,560,090    106      0  /home/kwoksun2/dengo/dengo-project-dengo-ed14369817a2/dengo_data_structure/Untitled Folder/serial_performance_grid/eqH2/final/new/new__solver.C:calculate_jacobian_new_(double, _generic_N_Vector*, _generic_N_Vector*, _generic_SUNMatrix*, void*, _generic_N_Vector*, _generic_N_Vector*, _generic_N_Vector*)
12,026,448    16,296     3  7,732,452   1,038     0   468,510  2,097      0  ???:SUNMatCopy_Dense
10,366,906    50,556     8  5,699,966   2,508     0   877,920      0      0  ???:Vaxpy_Serial
 9,162,340   190,763    22  1,845,344  34,194   216   593,895 14,883      0  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_log.c:__ieee754_log_avx
 9,068,900   473,131    51  4,331,185       4     1   932,122      3      0  /home/kwoksun2/dengo/dengo-project-dengo-ed14369817a2/dengo_data_structure/Untitled Folder/serial_performance_grid/eqH2/final/new/new__solver.C:new__calculate_temperature(new__data*, double*, int, int)
 6,203,382    29,992     4  3,491,724      20     0   705,774    998      0  ???:VCopy_Serial
 6,179,664    41,881     3  3,438,684     112     0   822,294      0      0  ???:N_VWrmsNorm_Serial
 5,989,617    78,127 1,542  2,197,183  89,161    36   164,852  3,207    110  ???:???
 5,556,984    10,528     2  2,778,492   5,899     1 1,852,328      0      0  ???:SUNRabs
 5,336,838    25,719     3  2,919,296      35     0   501,754      0      0  ???:VSum_Serial
 5,269,231    51,821    15  2,640,240   1,609     0 1,112,263      0      0  ???:N_VLinearSum_Serial
 5,012,925    51,760     9  1,013,850  17,206   218   225,300      0      0  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_exp.c:__exp1
 4,285,600   112,935    16  2,123,320   8,820     0   448,040    541      0  /home/kwoksun2/dengo/dengo-project-dengo-ed14369817a2/dengo_data_structure/Untitled Folder/serial_performance_grid/eqH2/final/new/new__solver.C:new__interpolate_gamma(new__data*, int)
 3,921,501    20,728     4    687,429      81     0   656,145      0      0  /build/eglibc-ripdx6/eglibc-2.19/math/w_pow.c:pow
 3,277,365    30,545     3  1,846,026       0     0   307,671      0      0  ???:VLin2_Serial
 2,751,637     4,522     2  1,603,049     285     0   235,144  1,273      0  ???:SUNMatZero_Dense
 2,429,175    20,323     4  1,368,270   6,715     0   228,045      0      0  ???:VLin1_Serial
 2,188,104    19,204     1  1,094,052   5,819     0   820,539     40      0  ???:N_VLinearSum
 1,984,353    25,407    76    857,765       0     0   168,211      1      0  ???:cvSLdet
 1,822,823   159,939    17  1,181,975      74     1   302,562    157      0  ???:cvNewtonIteration
 1,513,008    10,652     2    884,800       0     0   150,416      0      0  ???:VScaleBy_Serial
 1,312,415        90    18         90      25     0   328,960 41,115      0  ???:H5C_create
 1,217,671    78,154     7    254,239     152     2    80,286      0      0  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_exp.c:__ieee754_exp_avx
 1,204,852    34,830     6    488,852   6,000     1   332,466     60      0  ???:N_VScale_Serial
 1,162,018    10,508     2    604,670       0     0   262,900      0      0  ???:N_VAbs_Serial
   982,872    10,505     2    546,624       0     0    99,864      0      0  ???:N_VInv_Serial
   914,881    17,384     3    529,270       0     0   128,537      0      0  ???:N_VConst_Serial
   913,277       155    11    151,705   2,639 1,213    56,604     56      0  /build/eglibc-ripdx6/eglibc-2.19/elf/dl-lookup.c:_dl_lookup_symbol_x
   875,463    18,296     2    414,693   2,154     0   276,462      0      0  ???:N_VScale
   822,907       291    33    282,690   9,246 1,161   139,169     59      0  /build/eglibc-ripdx6/eglibc-2.19/elf/dl-lookup.c:do_lookup_x
   821,729    39,307    12    447,047     497     0   159,305    440      0  ???:cvNlsNewton
   820,647        36     2     88,423       0     0         0      0      0  /build/eglibc-ripdx6/eglibc-2.19/elf/../sysdeps/generic/dl-hash.h:do_lookup_x
   802,620    56,317     5    347,802     589     0   240,786      0      0  ???:SUNLinSolSolve_Dense
   793,915    25,420     9    477,816   2,470     0    94,830      0      0  ???:cvCompleteStep
   733,183    15,762     3    421,790       0     0    47,723      0      0  ???:N_VMin_Serial
   724,314    49,266     6    362,157   2,765     0   147,310      0      0  ???:cvDlsSolve
   718,713         0     0          0       0     0         0      0      0  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/wordsize-64/math_private.h:pow
   716,828    10,909     2    358,414     486     0   204,808      0      0  ???:SUNMatGetID
   695,819    50,871    13    365,367       0     0   133,610      1      0  ???:cvSetBDF
   653,069    27,377     5    364,346       0     0    50,013      0      0  ???:cvPredict
   619,575     3,631     1     56,325       0     0   112,650      6      0  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/i386/fpu/fenv_private.h:__ieee754_pow_sse2
   539,865    44,419    11    283,160       0     0   131,219      0      0  ???:cvSetTqBDF
   536,182    40,160     8    220,426   1,400     0   130,003      0      0  ???:cvStep
   521,128        83     1     72,956   1,145    40         0      0      0  ???:H5_hash_string
   517,925    29,416    12    239,480     807     0    44,183      0      0  ???:cvBDFStab
   504,501    81,959    43    289,023      52     0    57,842    161      0  ???:CVode
   473,442    11,872     1    224,262     248     0   149,508      0      0  ???:N_VWrmsNorm
   454,217    56,117    16    228,861   1,121     2    99,568      1      0  ???:cvDlsSetup
   423,657     2,262     1    174,447       0     0   149,526      0      0  ???:SUNRsqrt
   412,046     1,284    59     52,734     790     4    66,842  2,606  2,105  /build/eglibc-ripdx6/eglibc-2.19/malloc/malloc.c:_int_malloc
   339,559       384     5      1,455       5     0   186,542 44,336 17,627  /build/eglibc-ripdx6/eglibc-2.19/string/../sysdeps/x86_64/memset.S:memset
   316,428    13,378     1          0       0     0         0      0      0  /build/eglibc-ripdx6/eglibc-2.19/math/w_log.c:log
   312,605       729    11     99,190   3,465     1    38,523     68      0  ???:H5SL_search
   307,212    26,756     2    102,404       0     0   102,404      0      0  ???:SUNMatGetID_Dense
   295,765    21,298     4    151,028       0     0    44,051      1      0  ???:cvSet
   292,782        12     0     90,613   4,627 2,220         0      0      0  /build/eglibc-ripdx6/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../strcmp.S:strcmp

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/kwoksun2/dengo/dengo-project-dengo-ed14369817a2/dengo_data_structure/Untitled Folder/serial_performance_grid/eqH2/final/new/new__solver.C
--------------------------------------------------------------------------------
       Ir    I1mr ILmr        Dr  D1mr DLmr      Dw  D1mw DLmw 

-- line 11 ----------------------------------------
        .       .    .         .     .    .       .     .    .     will be fed into the solver.
        .       .    .         .     .    .       .     .    .  */
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  #include "new__solver.h"
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  new__data *new__setup_data(
        .       .    .         .     .    .       .     .    .      int *NumberOfFields, char ***FieldNames)
        6       1    1         0     0    0       4     1    0  {
        .       .    .         .     .    .       .     .    .      int i;
        .       .    .         .     .    .       .     .    .  
        3       0    0         0     0    0       2     0    0      new__data *data = (new__data *) malloc(sizeof(new__data));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      /* allocate space for the scale related pieces */
       34       1    1        21     0    0       1     0    0      for (i = 0; i< 10 ; i++){
       60       0    0        20     0    0      10     1    1      data->scale[i] = 1.0;
       60       0    0        20     0    0      10     2    2      data->inv_scale[i] = 1.0;
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      /*initialize temperature so it wont crash*/
        3       0    0         1     0    0       1     1    1      data->Ts[0] = 1000.0;
        3       1    1         1     0    0       1     1    1      data->logTs[0] = log(1000.0);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Temperature-related pieces */
        3       0    0         1     0    0       1     0    0      data->bounds[0] = 1.0;
        3       0    0         1     0    0       1     0    0      data->bounds[1] = 100000.0;
        2       1    1         1     0    0       1     0    0      data->nbins = 1024 - 1;
       20       1    1        10     0    0       6     0    0      data->dbin = (log(data->bounds[1]) - log(data->bounds[0])) / data->nbins;
       10       0    0         5     0    0       3     0    0      data->idbin = 1.0L / data->dbin;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Redshift-related pieces */
        3       1    1         1     0    0       1     0    0      data->z_bounds[0] = 0.0;
        3       0    0         1     0    0       1     0    0      data->z_bounds[1] = 0.0;
        2       0    0         1     0    0       1     0    0      data->n_zbins = 0 - 1;
       20       1    1        10     1    1       4     0    0      data->d_zbin = (log(data->z_bounds[1] + 1.0) - log(data->z_bounds[0] + 1.0)) / data->n_zbins;
       10       1    1         5     0    0       3     0    0      data->id_zbin = 1.0L / data->d_zbin;
        .       .    .         .     .    .       .     .    .      
        3       0    0         1     0    0       1     0    0      new__read_rate_tables(data);
        6       2    1         1     1    0       1     0    0      fprintf(stderr, "Successfully read in rate tables.\n");
        .       .    .         .     .    .       .     .    .  
        3       0    0         1     1    0       1     0    0      new__read_cooling_tables(data);
        6       1    0         1     1    0       1     0    0      fprintf(stderr, "Successfully read in cooling rate tables.\n");
        .       .    .         .     .    .       .     .    .      
        3       1    1         1     1    0       1     0    0      new__read_gamma(data);
        6       1    0         1     1    0       1     0    0      fprintf(stderr, "Successfully read in gamma tables. \n");
        .       .    .         .     .    .       .     .    .  
        2       0    0         1     0    0       0     0    0      if (FieldNames != NULL && NumberOfFields != NULL) {
        .       .    .         .     .    .       .     .    .          NumberOfFields[0] = 10;
        .       .    .         .     .    .       .     .    .          FieldNames[0] = new char*[10];
        .       .    .         .     .    .       .     .    .          i = 0;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          FieldNames[0][i++] = strdup("H2_1");
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          FieldNames[0][i++] = strdup("H2_2");
        .       .    .         .     .    .       .     .    .          
-- line 65 ----------------------------------------
-- line 75 ----------------------------------------
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          FieldNames[0][i++] = strdup("He_3");
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          FieldNames[0][i++] = strdup("de");
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          FieldNames[0][i++] = strdup("ge");
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .      }
        1       1    0         1     1    0       0     0    0      return data;
        .       .    .         .     .    .       .     .    .  
        4       0    0         3     0    0       0     0    0  }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  int new__main(int argc, char** argv )
       12       2    2         0     0    0       9     0    0  {
        4       1    0         0     0    0       2     1    0      new__data *data = new__setup_data(NULL, NULL);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Initial conditions */
        .       .    .         .     .    .       .     .    .      hid_t file_id;
        2       0    0         1     1    0       0     0    0      if (argc < 2){
        9       1    1         0     0    0       3     1    0      file_id = H5Fopen("new__initial_conditions.h5", H5F_ACC_RDONLY, H5P_DEFAULT);
        2       0    0         1     0    0       0     0    0      if (file_id < 0) {fprintf(stderr, "Failed to open "
        .       .    .         .     .    .       .     .    .          "new__initial_conditions.h5 so dying.\n");
        .       .    .         .     .    .       .     .    .          return(1);}
        .       .    .         .     .    .       .     .    .      } else {
        .       .    .         .     .    .       .     .    .          file_id = H5Fopen( argv[1], H5F_ACC_RDONLY, H5P_DEFAULT);
        .       .    .         .     .    .       .     .    .          if (file_id < 0) {fprintf(stderr, "Failed to open  your initial_conditions file so dying.\n");
        .       .    .         .     .    .       .     .    .          return(1);}
        .       .    .         .     .    .       .     .    .         
        .       .    .         .     .    .       .     .    .              
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Allocate the correct number of cells */
        .       .    .         .     .    .       .     .    .      hsize_t dims; /* We have flat versus number of species */
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Check gas energy to get the number of cells */
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Getting dimensionality from ge:\n");
        8       2    1         1     0    0       2     1    0      herr_t status = H5LTget_dataset_info(file_id, "/ge", &dims, NULL, NULL);
        2       0    0         1     0    0       0     0    0      if(status == -1) {
        .       .    .         .     .    .       .     .    .          fprintf(stderr, "Error opening initial conditions file.\n");
        .       .    .         .     .    .       .     .    .          return 1;
        .       .    .         .     .    .       .     .    .      }
        7       1    1         2     1    0       1     0    0      fprintf(stderr, "  ncells = % 3i\n", (int) dims);
        4       0    0         2     0    0       1     1    0      data->ncells = dims;
        .       .    .         .     .    .       .     .    .  
        1       0    0         0     0    0       1     0    0      int N = 10;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      double *atol, *rtol;
        8       1    1         2     0    0       2     0    0      atol = (double *) malloc(N * dims * sizeof(double));
        8       1    1         2     0    0       2     0    0      rtol = (double *) malloc(N * dims * sizeof(double));
        .       .    .         .     .    .       .     .    .  
        5       0    0         1     0    0       2     1    0      double *tics = (double *) malloc(dims * sizeof(double));
        8       1    1         2     0    0       2     0    0      double *ics = (double *) malloc(dims * N * sizeof(double));
        8       0    0         2     0    0       2     0    0      double *input = (double *) malloc(dims * N * sizeof(double));
        5       1    1         1     0    0       2     0    0      double *temp  = (double *) malloc(dims * sizeof(double) );
        .       .    .         .     .    .       .     .    .  
        1       0    0         0     0    0       1     0    0      unsigned int i = 0, j;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /H2_1\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/H2_1", tics);
       11       3    2         5     1    0       1     1    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       2    2         8     1    1       1     0    0          atol[j * N + i] = tics[j] * 1e-09;
       11       0    0         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       1    1         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "H2_1[0] = %0.3g, atol => % 0.16g\n",
       19       0    0         9     1    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /H2_2\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/H2_2", tics);
       11       3    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       2    2         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       0    0         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       1    1         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "H2_2[0] = %0.3g, atol => % 0.16g\n",
       19       0    0         9     1    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /H_1\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/H_1", tics);
       11       3    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "H_1[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     1    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /H_2\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/H_2", tics);
       11       3    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "H_2[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     1    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /H_m0\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/H_m0", tics);
       11       2    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "H_m0[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     2    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /He_1\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/He_1", tics);
       11       2    1         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "He_1[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     2    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       1    1         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /He_2\n");
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/He_2", tics);
       11       2    1         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "He_2[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     2    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       1    1         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /He_3\n");
        6       0    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/He_3", tics);
       11       2    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "He_3[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     2    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       1    1         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       0    0         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /de\n");
        6       0    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/de", tics);
       11       2    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "de[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     2    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        6       1    1         1     0    0       1     0    0      fprintf(stderr, "Reading I.C. for /ge\n");
        6       0    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/ge", tics);
       11       2    2         5     1    0       1     0    0      for (j = 0; j < dims; j++) {
       15       1    1         7     1    0       1     1    0          ics[j * N + i] = tics[j]; 
       17       1    1         8     1    0       1     1    0          atol[j * N + i] = tics[j] * 1e-09;
       11       1    1         4     0    0       1     1    0          rtol[j * N + i] = 1e-09;
        2       0    0         1     0    0       0     0    0          if(j==0) {
        .       .    .         .     .    .       .     .    .              fprintf(stderr, "ge[0] = %0.3g, atol => % 0.16g\n",
       19       1    1         9     2    0       3     1    0                      tics[j], atol[j]);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .      }
        1       0    0         1     0    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        5       1    1         1     0    0       2     0    0      double *density = (double *) malloc(dims *sizeof(double) );
        6       0    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/density", density);
        .       .    .         .     .    .       .     .    .  
        3       1    0         1     0    0       1     0    0      H5Fclose(file_id);
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      /*
        .       .    .         .     .    .       .     .    .       * Use free fall time, not the time specified by 
        .       .    .         .     .    .       .     .    .       * the network itself
        .       .    .         .     .    .       .     .    .       */
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      // double dtf = 299204917.32712233;
        .       .    .         .     .    .       .     .    .      double dtf, t0;
        2       1    1         0     0    0       1     1    0      t0 = 2.992e15;
        9       1    1         4     0    0       3     2    0      dtf = t0 / sqrt(density[0]);
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // if the output time is specified,
        .       .    .         .     .    .       .     .    .      // it overrides the freefall time
        2       0    0         1     0    0       0     0    0      if (argc > 3){
        .       .    .         .     .    .       .     .    .          dtf = atof( argv[3] ); 
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .  
        2       1    1         0     0    0       1     0    0      double dt = -1.0;
        2       0    0         0     0    0       1     0    0      double z = -1.0;
      189       2    2        93     1    0      11     2    1      for (i = 0; i < dims * N; i++) input[i] = ics[i];
        .       .    .         .     .    .       .     .    .      double ttot;
       22       3    2        11     0    0       6     2    0      ttot = dengo_evolve_new_(dtf, dt, z, input, rtol, atol, dims, data, temp);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Write results to HDF5 file */
        .       .    .         .     .    .       .     .    .  
        2       0    0         1     0    0       0     0    0      if (argc < 3){
       11       2    1         0     0    0       3     1    0          file_id = H5Fcreate("new__solution.h5", H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);
        .       .    .         .     .    .       .     .    .      } else{
        .       .    .         .     .    .       .     .    .          file_id = H5Fcreate( argv[2], H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      hsize_t dimsarr[1];
        2       1    1         1     1    0       1     0    0      dimsarr[0] = dims;
        1       0    0         0     0    0       1     0    0      i = 0;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     0    0       2     1    0      double H2_1[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     1    0       1     0    0          H2_1[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /H2_1\n");
        8       1    1         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/H2_1", 1, dimsarr, H2_1);
        1       1    0         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double H2_2[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          H2_2[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /H2_2\n");
        8       1    1         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/H2_2", 1, dimsarr, H2_2);
        1       1    0         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double H_1[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          H_1[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /H_1\n");
        8       0    0         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/H_1", 1, dimsarr, H_1);
        1       1    1         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double H_2[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          H_2[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /H_2\n");
        8       0    0         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/H_2", 1, dimsarr, H_2);
        1       1    1         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double H_m0[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          H_m0[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /H_m0\n");
        8       0    0         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/H_m0", 1, dimsarr, H_m0);
        1       1    1         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double He_1[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          He_1[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /He_1\n");
        8       0    0         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/He_1", 1, dimsarr, He_1);
        1       1    0         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double He_2[dims];
       11       2    2         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          He_2[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       0    0         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /He_2\n");
        8       1    1         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/He_2", 1, dimsarr, He_2);
        1       1    0         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       28       2    2         1     1    0       6     2    0      double He_3[dims];
       11       2    2         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          He_3[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       0    0         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /He_3\n");
        9       1    1         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/He_3", 1, dimsarr, He_3);
        1       1    0         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       27       2    2         1     1    0       6     2    0      double de[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          de[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /de\n");
        9       0    0         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/de", 1, dimsarr, de);
        1       1    1         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
       27       2    2         1     1    0       6     1    0      double ge[dims];
       11       1    1         5     0    0       1     0    0      for (j = 0; j < dims; j++) {
       13       0    0         7     2    0       1     0    0          ge[j] = input[j * N + i]; 
        .       .    .         .     .    .       .     .    .      }
        6       1    1         1     1    0       1     0    0      fprintf(stderr, "Writing solution for /ge\n");
        9       0    0         2     0    0       1     0    0      H5LTmake_dataset_double(file_id, "/ge", 1, dimsarr, ge);
        1       1    0         1     1    0       0     0    0      i++;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        9       1    1         2     1    0       1     0    0      H5LTmake_dataset_double(file_id, "/T", 1, dimsarr, temp);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      double time[1];
        2       1    0         1     1    0       1     1    0      time[0] = ttot;
        .       .    .         .     .    .       .     .    .      double timestep[1];
        2       0    0         1     1    0       1     0    0      timestep[0] = dt;
        8       1    1         1     0    0       1     0    0      H5LTset_attribute_double(file_id, "/", "time", time, 1); 
        8       2    1         1     0    0       1     0    0      H5LTset_attribute_double(file_id, "/", "timestep", timestep, 1);
        3       1    0         1     1    0       1     0    0      H5Fclose(file_id);
        .       .    .         .     .    .       .     .    .      
        3       1    0         1     1    0       1     0    0      free(temp);
        3       0    0         1     0    0       1     0    0      free(tics);
        3       1    1         1     0    0       1     0    0      free(ics);
        3       0    0         1     1    0       1     0    0      free(data);
        3       0    0         1     0    0       1     0    0      free(rtol);
        3       0    0         1     0    0       1     0    0      free(atol);
        3       1    0         1     0    0       1     0    0      free(input);
        .       .    .         .     .    .       .     .    .  
        2       0    0         0     0    0       0     0    0      return 0;
        8       0    0         7     2    0       0     0    0  }
        .       .    .         .     .    .       .     .    .   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  double dengo_evolve_new_ (double dtf, double &dt, double z, double *input,
       11       2    2         0     0    0       9     0    0              double *rtol, double *atol, long long dims, new__data *data, double *temp_array ) {
        .       .    .         .     .    .       .     .    .      int i, j;
        .       .    .         .     .    .       .     .    .      hid_t file_id;
        .       .    .         .     .    .       .     .    .      /* fprintf(stderr, "  ncells = % 3i\n", (int) dims); */
        .       .    .         .     .    .       .     .    .  
        1       0    0         0     0    0       1     0    0      int N = 10;
        7       1    1         2     0    0       2     0    0      double *mdensity = (double *) malloc (dims * N * sizeof(double));
       11       1    1         5     0    0       1     0    0      for (i = 0; i<dims; i++) {
        3       0    0         2     0    0       1     0    0          j = i * N;
        7       1    1         2     0    0       1     0    0          mdensity[i] = 0;
        .       .    .         .     .    .       .     .    .          
       19       1    1         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     1    0       1     0    0          input[j] /= 2.01588 ;
       14       2    2         6     1    0       1     0    0          atol[j] /= 2.01588 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       1    1         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 2.01588 ;
       14       1    1         6     0    0       1     0    0          atol[j] /= 2.01588 ;
        .       .    .         .     .    .       .     .    .          
        1       1    1         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       1    1         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 1.00794 ;
       14       1    1         6     0    0       1     0    0          atol[j] /= 1.00794 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       2    2         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 1.00794 ;
       14       1    1         6     0    0       1     0    0          atol[j] /= 1.00794 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       2    2         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 1.00794 ;
       14       1    1         6     1    0       1     0    0          atol[j] /= 1.00794 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       2    2         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 4.002602 ;
       14       1    1         6     0    0       1     0    0          atol[j] /= 4.002602 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       2    2         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 4.002602 ;
       14       1    1         6     0    0       1     0    0          atol[j] /= 4.002602 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       2    2         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       14       1    1         6     0    0       1     0    0          input[j] /= 4.002602 ;
       14       1    1         6     0    0       1     0    0          atol[j] /= 4.002602 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
       19       1    1         8     0    0       1     0    0          mdensity[i] += input[j] ; 
       12       1    1         5     0    0       1     0    0          input[j] /= 1.0 ;
       12       1    1         5     0    0       1     0    0          atol[j] /= 1.0 ;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .      //ensure_electron_consistency(input, dims, N);
        .       .    .         .     .    .       .     .    .  
        1       0    0         0     0    0       1     0    0      rhs_f f = calculate_rhs_new_;
        1       0    0         0     0    0       1     0    0      jac_f jf = calculate_jacobian_new_;
        8       1    1         4     0    0       1     0    0      if (dt < 0) dt = dtf / 1e0;
        3       0    0         2     0    0       1     1    0      data->current_z = z;
        1       0    0         0     0    0       1     0    0      int niter = 0;
        1       0    0         0     0    0       1     0    0      int siter = 0;
        2       1    1         0     0    0       1     0    0      double ttot = 0;
        7       0    0         2     0    0       2     0    0      double *scale = (double *) malloc(dims * N * sizeof(double));
        7       1    1         2     0    0       2     0    0      double *prev = (double *) malloc(dims * N * sizeof(double));
        5       0    0         1     0    0       2     0    0      double *ttot_all = (double *) malloc( dims * sizeof(double) );
        .       .    .         .     .    .       .     .    .  
      209       2    2        93     0    0      11     0    0      for (i = 0; i < dims * N; i++) scale[i] = input[i];
      209       1    1        93     0    0      11     0    0      for (i = 0; i < dims * N; i++) prev[i] = input[i];
        .       .    .         .     .    .       .     .    .     
        .       .    .         .     .    .       .     .    .      
        2       1    1         0     0    0       1     0    0      double floor_value = 1e-25;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      // Initialize a CVODE object, memory spaces
        .       .    .         .     .    .       .     .    .      // and attach rhs, jac to them
        .       .    .         .     .    .       .     .    .      int flag;
        2       0    0         0     0    0       1     0    0      double reltol = 1.0e-5;
        .       .    .         .     .    .       .     .    .      void *cvode_mem;
        1       0    0         0     0    0       1     0    0      int MAX_ITERATION = 100; 
        .       .    .         .     .    .       .     .    .      double y[10];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      SUNLinearSolver LS;
        .       .    .         .     .    .       .     .    .      SUNMatrix A;
        .       .    .         .     .    .       .     .    .      N_Vector y_vec, abstol;
        .       .    .         .     .    .       .     .    .      
        1       0    0         0     0    0       1     0    0      y_vec = NULL;   
        1       0    0         0     0    0       1     0    0      LS = NULL;
        1       0    0         0     0    0       1     0    0      A  = NULL;
        .       .    .         .     .    .       .     .    .      
        5       1    1         1     0    0       2     0    0      y_vec  = N_VNew_Serial(N);
        5       0    0         1     0    0       2     0    0      abstol = N_VNew_Serial(N); 
        .       .    .         .     .    .       .     .    .  
       45       1    1        32     0    0       1     0    0      for (i=0; i<N; i++) {
       90       1    1        40     0    0      10     0    0          NV_Ith_S(y_vec ,i)   = 1.0;
       90       0    0        40     0    0      10     0    0          NV_Ith_S(abstol,i)   = 1.0;
       40       0    0        10     0    0      10     0    0          y[i] = 1.0;
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .  
        8       1    1         2     0    0       2     0    0      A = SUNDenseMatrix(N, N);
        6       0    0         2     0    0       2     0    0      LS = SUNDenseLinearSolver(y_vec, A);
       16       1    1        10     0    0       5     0    0      cvode_mem = setup_cvode_solver( f, jf, N, data, LS, A, y_vec, reltol, abstol);
        .       .    .         .     .    .       .     .    .      
        3       1    1         2     0    0       1     0    0      double h_density = mdensity[0];
       11       1    1         5     0    0       1     0    0      for (int d = 0; d < dims; d++){
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          // copy array which can be passed to the solver
        .       .    .         .     .    .       .     .    .          /*
        .       .    .         .     .    .       .     .    .          for (i = 0; i < N; i++){ 
        .       .    .         .     .    .       .     .    .              // this is being passed around 
        .       .    .         .     .    .       .     .    .              // passively by the "dengo_rate_data" 
        .       .    .         .     .    .       .     .    .              // will have to fix it for openmp
        .       .    .         .     .    .       .     .    .              data->scale[i] = input[d*N + i];
        .       .    .         .     .    .       .     .    .              data->inv_scale[i] = 1.0 / input[d*N + i];
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .          */ 
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          
       45       1    1        32     0    0       1     0    0          for (i = 0; i < N; i++){ 
        .       .    .         .     .    .       .     .    .              /*
        .       .    .         .     .    .       .     .    .              if ( i == 0  || i == 2){
        .       .    .         .     .    .       .     .    .                  data->scale[i] = mdensity[d]; //h_density;
        .       .    .         .     .    .       .     .    .                  data->inv_scale[i] = 1.0 / data->scale[i];
        .       .    .         .     .    .       .     .    .              
        .       .    .         .     .    .       .     .    .                  NV_Ith_S(y_vec , i )   = input[ d*N+i ] * data->inv_scale[i];
        .       .    .         .     .    .       .     .    .                  NV_Ith_S(abstol, i )   = NV_Ith_S(y_vec , i ) * reltol * reltol;
        .       .    .         .     .    .       .     .    .              
        .       .    .         .     .    .       .     .    .                  fprintf(stderr, "y_vec = %0.5g; abstol = %0.5g \n", NV_Ith_S(y_vec , i ), NV_Ith_S(abstol , i ));  
        .       .    .         .     .    .       .     .    .              }
        .       .    .         .     .    .       .     .    .              */
        .       .    .         .     .    .       .     .    .              // else{
      150       1    1        70     1    0      10     1    0                  data->scale[i]     = input[d*N + i];
      120       1    1        60     1    0      10     2    0                  data->inv_scale[i] = 1.0 / data->scale[i];
      240       2    2       120     0    0      10     0    0                  NV_Ith_S(y_vec , i )   = input[ d*N+i ] * data->inv_scale[i];
      100       0    0        60     0    0      10     0    0                  NV_Ith_S(abstol, i )   = reltol * reltol ;
        .       .    .         .     .    .       .     .    .              // }
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          // initialize a dt for the solver  
        3       0    0         2     0    0       1     0    0          dt = dtf;
        2       1    1         0     0    0       1     0    0          ttot = 0.0;
        1       0    0         0     0    0       1     0    0          siter = 0;
        .       .    .         .     .    .       .     .    .              
       10       1    1         6     0    0       0     0    0          while (ttot < dtf) { 
       18       3    1        10     1    0       4     0    0              fprintf(stderr, "%d th strip: %d iterations, time: %0.5g\n", d, siter, ttot );
        .       .    .         .     .    .       .     .    .              
       28       3    1        16     0    0       8     2    0              flag = cvode_solver( cvode_mem, y, N, &dt, data, y_vec, reltol, abstol);
        .       .    .         .     .    .       .     .    .  
       90       2    1        64     2    0       2     0    0              for (i = 0; i < N; i++) {
      120       0    0        40     0    0       0     0    0                  if (y[i] < 0) {
        .       .    .         .     .    .       .     .    .                      flag = 1;
        .       .    .         .     .    .       .     .    .                      break;
        .       .    .         .     .    .       .     .    .                  }
        .       .    .         .     .    .       .     .    .              }
        .       .    .         .     .    .       .     .    .  
        4       0    0         2     0    0       0     0    0              if (flag < 1){
       90       4    2        64     0    0       2     0    0                  for (i = 0; i < N; i++){
      280       2    1       140     2    0      20     0    0                      data->scale[i] = y[i] * data->scale[i];
      240       4    2       120     0    0      20     0    0                      data->inv_scale[i] = 1.0/ data->scale[i];
        .       .    .         .     .    .       .     .    .                      
      180       0    0        80     2    0      20     0    0                      NV_Ith_S(y_vec , i )   = 1.0;
      360       0    0       220     4    0      20     2    0                      NV_Ith_S(abstol, i )   = NV_Ith_S(y_vec, i) * reltol * reltol ;
        .       .    .         .     .    .       .     .    .                      // fprintf(stderr , "data->scale[%d] = %0.5g \n", i,y[i]);
        .       .    .         .     .    .       .     .    .                  }
        .       .    .         .     .    .       .     .    .  
       10       0    0         6     0    0       2     0    0                  ttot += dt;
       10       2    1         6     0    0       2     0    0                  dt = dtf - ttot;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .              } else{
        .       .    .         .     .    .       .     .    .                  dt /= 2.0;
        .       .    .         .     .    .       .     .    .                  dt = DMIN(dt * 1.1, dtf - ttot);
        .       .    .         .     .    .       .     .    .              }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  	        
        6       2    0         4     0    0       0     0    0              if (siter == MAX_ITERATION) break;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          
        2       0    0         2     0    0       0     0    0              siter++;
        .       .    .         .     .    .       .     .    .          } // while loop for each strip
        .       .    .         .     .    .       .     .    .          
        9       1    1         4     1    0       2     0    0          fprintf(stderr, "%d the strip = %0.5g\n", d, ttot);
        8       1    1         4     1    0       1     0    0          temp_array[ d ] = data->Ts[0];
        7       0    0         3     0    0       1     1    0          ttot_all[d] = ttot;
        .       .    .         .     .    .       .     .    .  
       45       2    1        32     0    0       1     0    0          for (i = 0; i < N; i++){
      150       0    0        70     0    0      10     1    0              input[d*N +i] = data->scale[i] ;
        .       .    .         .     .    .       .     .    .              
        .       .    .         .     .    .       .     .    .          } // copy data back to the input array
        .       .    .         .     .    .       .     .    .      } // for d dims loop
        3       1    1         0     0    0       1     0    0      CVodeFree(&cvode_mem);
        3       0    0         1     0    0       1     0    0      SUNLinSolFree(LS);
        3       0    0         1     0    0       1     0    0      SUNMatDestroy(A);
        3       0    0         1     0    0       1     0    0      N_VDestroy(y_vec);
        3       0    0         1     0    0       1     0    0      N_VDestroy(abstol);
        3       1    1         1     0    0       1     0    0      free(scale);
        3       0    0         1     0    0       1     0    0      free(prev);
        3       0    0         1     0    0       1     0    0      free(mdensity);
       11       1    1         5     0    0       1     0    0      for (i = 0; i<dims; i++) {
        3       1    1         2     0    0       1     0    0        j = i * N;
        .       .    .         .     .    .       .     .    .          
       14       1    1         6     0    0       1     0    0          input[j] *= 2.01588;
       14       1    1         6     1    0       1     0    0          atol[j] *= 2.01588;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       1    1         6     0    0       1     0    0          input[j] *= 2.01588;
       14       1    1         6     0    0       1     0    0          atol[j] *= 2.01588;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       2    2         6     0    0       1     0    0          input[j] *= 1.00794;
       14       1    1         6     0    0       1     0    0          atol[j] *= 1.00794;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       1    1         6     0    0       1     0    0          input[j] *= 1.00794;
       14       1    1         6     0    0       1     0    0          atol[j] *= 1.00794;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       1    1         6     0    0       1     0    0          input[j] *= 1.00794;
       14       2    2         6     1    0       1     0    0          atol[j] *= 1.00794;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       1    1         6     0    0       1     0    0          input[j] *= 4.002602;
       14       1    1         6     0    0       1     0    0          atol[j] *= 4.002602;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       1    1         6     0    0       1     0    0          input[j] *= 4.002602;
       14       1    1         6     0    0       1     0    0          atol[j] *= 4.002602;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       14       2    2         6     0    0       1     0    0          input[j] *= 4.002602;
       14       1    1         6     0    0       1     0    0          atol[j] *= 4.002602;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
       12       1    1         5     0    0       1     0    0          input[j] *= 1.0;
       12       0    0         5     0    0       1     0    0          atol[j] *= 1.0;
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .          
        1       0    0         1     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .        
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .  
        2       1    1         1     0    0       1     0    0      double dt_final = dtf;
        .       .    .         .     .    .       .     .    .      
       11       1    1         5     0    0       1     0    0      for (int d = 0; d < dims; d++){
        9       0    0         4     0    0       0     0    0          if (ttot_all[d] < dt_final) dt_final = ttot_all[d];    
        .       .    .         .     .    .       .     .    .      }
        3       1    0         1     0    0       1     0    0      free(ttot_all);
        .       .    .         .     .    .       .     .    .  
        1       0    0         1     0    0       0     0    0      return dt_final;
        4       0    0         3     0    0       1     0    0  }
        .       .    .         .     .    .       .     .    .   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  void new__read_rate_tables(new__data *data)
        4       1    1         0     0    0       2     0    0  {
        9       2    1         0     0    0       3     0    0      hid_t file_id = H5Fopen("new__tables.h5", H5F_ACC_RDONLY, H5P_DEFAULT);
        .       .    .         .     .    .       .     .    .      /* Allocate the correct number of rate tables */
        6       0    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k01", data->r_k01);
        6       2    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k02", data->r_k02);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k03", data->r_k03);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k04", data->r_k04);
        6       2    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k05", data->r_k05);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k06", data->r_k06);
        6       2    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k07", data->r_k07);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k08", data->r_k08);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k09", data->r_k09);
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k10", data->r_k10);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k11", data->r_k11);
        6       2    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k12", data->r_k12);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k13", data->r_k13);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k14", data->r_k14);
        6       1    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k15", data->r_k15);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k16", data->r_k16);
        6       2    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k17", data->r_k17);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k18", data->r_k18);
        6       2    1         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k19", data->r_k19);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k21", data->r_k21);
        6       1    0         2     0    0       1     0    0      H5LTread_dataset_double(file_id, "/k22", data->r_k22);
        .       .    .         .     .    .       .     .    .  
        3       1    0         1     0    0       1     0    0      H5Fclose(file_id);
        2       1    1         2     1    0       0     0    0  }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  void new__read_cooling_tables(new__data *data)
        4       0    0         0     0    0       2     0    0  {
        .       .    .         .     .    .       .     .    .  
        9       1    0         0     0    0       3     0    0      hid_t file_id = H5Fopen("new__tables.h5", H5F_ACC_RDONLY, H5P_DEFAULT);
        .       .    .         .     .    .       .     .    .      /* Allocate the correct number of rate tables */
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/brem_brem",
        6       1    1         2     0    0       1     0    0                              data->c_brem_brem);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ceHeI_ceHeI",
        6       1    0         2     0    0       1     0    0                              data->c_ceHeI_ceHeI);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ceHeII_ceHeII",
        6       2    1         2     0    0       1     0    0                              data->c_ceHeII_ceHeII);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ceHI_ceHI",
        6       1    0         2     0    0       1     0    0                              data->c_ceHI_ceHI);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ciHeI_ciHeI",
        6       1    0         2     0    0       1     0    0                              data->c_ciHeI_ciHeI);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ciHeII_ciHeII",
        6       2    1         2     0    0       1     0    0                              data->c_ciHeII_ciHeII);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ciHeIS_ciHeIS",
        6       1    0         2     0    0       1     0    0                              data->c_ciHeIS_ciHeIS);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/ciHI_ciHI",
        6       2    1         2     0    0       1     0    0                              data->c_ciHI_ciHI);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/compton_comp_",
        6       1    0         2     0    0       1     0    0                              data->c_compton_comp_);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gammah_gammah",
        6       1    0         2     0    0       1     0    0                              data->c_gammah_gammah);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gael",
        6       2    1         2     0    0       1     0    0                              data->c_gloverabel08_gael);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gaH2",
        6       1    0         2     0    0       1     0    0                              data->c_gloverabel08_gaH2);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gaHe",
        6       2    1         2     0    0       1     0    0                              data->c_gloverabel08_gaHe);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gaHI",
        6       1    0         2     0    0       1     0    0                              data->c_gloverabel08_gaHI);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gaHp",
        6       1    0         2     0    0       1     0    0                              data->c_gloverabel08_gaHp);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gphdl",
        6       1    1         2     0    0       1     0    0                              data->c_gloverabel08_gphdl);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_gpldl",
        6       1    0         2     0    0       1     0    0                              data->c_gloverabel08_gpldl);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gloverabel08_h2lte",
        6       2    1         2     0    0       1     0    0                              data->c_gloverabel08_h2lte);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/h2formation_h2mcool",
        6       1    0         2     0    0       1     0    0                              data->c_h2formation_h2mcool);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/h2formation_h2mheat",
        6       1    0         2     0    0       1     0    0                              data->c_h2formation_h2mheat);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/h2formation_ncrd1",
        6       1    1         2     0    0       1     0    0                              data->c_h2formation_ncrd1);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/h2formation_ncrd2",
        6       1    0         2     0    0       1     0    0                              data->c_h2formation_ncrd2);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/h2formation_ncrn",
        6       2    1         2     0    0       1     0    0                              data->c_h2formation_ncrn);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/reHeII1_reHeII1",
        6       1    0         2     0    0       1     0    0                              data->c_reHeII1_reHeII1);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/reHeII2_reHeII2",
        6       2    1         2     0    0       1     0    0                              data->c_reHeII2_reHeII2);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/reHeIII_reHeIII",
        6       0    0         2     0    0       1     0    0                              data->c_reHeIII_reHeIII);
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/reHII_reHII",
        6       0    0         2     0    0       1     0    0                              data->c_reHII_reHII);
        .       .    .         .     .    .       .     .    .  
        3       0    0         1     0    0       1     0    0      H5Fclose(file_id);
        2       1    1         2     1    0       0     0    0  }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  void new__read_gamma(new__data *data)
        4       0    0         0     0    0       2     0    0  {
        .       .    .         .     .    .       .     .    .  
        9       1    0         0     0    0       3     0    0      hid_t file_id = H5Fopen("new__tables.h5", H5F_ACC_RDONLY, H5P_DEFAULT);
        .       .    .         .     .    .       .     .    .      /* Allocate the correct number of rate tables */
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gammaH2_1",
        6       1    1         2     0    0       1     0    0                              data->g_gammaH2_1 );
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/dgammaH2_1_dT",
        6       1    0         2     0    0       1     0    0                              data->g_dgammaH2_1_dT );   
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/gammaH2_2",
        6       2    1         2     0    0       1     0    0                              data->g_gammaH2_2 );
        .       .    .         .     .    .       .     .    .      H5LTread_dataset_double(file_id, "/dgammaH2_2_dT",
        6       1    0         2     0    0       1     0    0                              data->g_dgammaH2_2_dT );   
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        3       1    0         1     0    0       1     0    0      H5Fclose(file_id);
        .       .    .         .     .    .       .     .    .  
        2       0    0         2     1    0       0     0    0  }
        .       .    .         .     .    .       .     .    .   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  void new__calculate_temperature(new__data *data,
        .       .    .         .     .    .       .     .    .                          double *input, int nstrip, int nchem)
   93,667  22,356    1         0     0    0  66,905     1    0  {
        .       .    .         .     .    .       .     .    .      int i, j;
        .       .    .         .     .    .       .     .    .      double density;
   26,762       0    0         0     0    0  13,381     0    0      double kb = 1.3806504e-16; // Boltzmann constant [erg/K]
   26,762       0    0         0     0    0  13,381     0    0      double mh = 1.67e-24;
   26,762  13,378    1         0     0    0  13,381     0    0      double gamma = 5.e0/3.e0;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
   26,762       0    0         0     0    0  13,381     0    0      double gammaH2 = 7.e0/5.e0; // Should be a function of temperature
        .       .    .         .     .    .       .     .    .      	   	     		// this is a temporary solution
        .       .    .         .     .    .       .     .    .      double T,x, expx, Tnew;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      /* Calculate total density */
        .       .    .         .     .    .       .     .    .      double H2_1;
-- line 835 ----------------------------------------
-- line 841 ----------------------------------------
        .       .    .         .     .    .       .     .    .      double He_2;
        .       .    .         .     .    .       .     .    .      double He_3;
        .       .    .         .     .    .       .     .    .      double de;
        .       .    .         .     .    .       .     .    .      double ge;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      /* define scale */
        .       .    .         .     .    .       .     .    .      double scale;
        .       .    .         .     .    .       .     .    .      
   13,381       0    0         0     0    0  13,381     0    0      i = 0;
   40,143       0    0    26,762     0    0  13,381     0    0          j = i * nchem;
   80,286  13,378    1    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048  13,377    1    53,524     0    0  13,381     0    0          H2_1 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048   3,320    1    53,524     0    0  13,381     0    0          H2_2 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286   5,458    1    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048       0    0    53,524     0    0  13,381     0    0          H_1 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286   9,007    1    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048  13,377    1    53,524     0    0  13,381     0    0          H_2 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048   6,743    1    53,524     0    0  13,381     0    0          H_m0 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048   7,829    1    53,524     0    0  13,381     0    0          He_1 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286  13,381    1    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048       0    0    53,524     0    0  13,381     0    0          He_2 = input[j]*scale;
   13,381  13,381    1    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048  13,381    1    53,524     0    0  13,381     0    0          He_3 = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048  13,380    1    53,524     0    0  13,381     0    0          de = input[j]*scale;
   13,381       0    0    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
   80,286  12,170    1    40,143     0    0  13,381     0    0          scale = data->scale[j];
  107,048       0    0    53,524     0    0  13,381     0    0          ge = input[j]*scale;
   13,381  10,131    1    13,381     0    0       0     0    0          j++;
        .       .    .         .     .    .       .     .    .      
  428,192  20,416    2   214,096     0    0  13,381     0    0          density = 2.01588*H2_1 + 2.01588*H2_2 + 1.00794*H_1 + 1.00794*H_2 + 1.00794*H_m0 + 4.002602*He_1 + 4.002602*He_2 + 4.002602*He_3;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          // Initiate the "guess" temperature
   80,286   6,217    1    40,143     3    0  13,381     0    0          T = data->Ts[i];
   53,524       0    0    26,762     0    0  13,381     0    0          Tnew = T + 1.0;
        .       .    .         .     .    .       .     .    .          double dge_dT;
        .       .    .         .     .    .       .     .    .          double dge;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          double gammaH2_1;
        .       .    .         .     .    .       .     .    .          double dgammaH2_1_dT;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          double gammaH2_2;
        .       .    .         .     .    .       .     .    .          double dgammaH2_2_dT;
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          
   26,762       0    0         0     0    0  13,381     0    0          double Tdiff = 1.0; 
  111,964   7,652    1    65,722     1    1       0     0    0          while ( Tdiff > 0.1 ){
        .       .    .         .     .    .       .     .    .          // We do Newton's Iteration to calculate the temperature
        .       .    .         .     .    .       .     .    .          // Since gammaH2 is dependent on the temperature too!
        .       .    .         .     .    .       .     .    .  
  116,880   6,217    1    58,440     0    0  19,480     0    0          T = data->Ts[i];
        .       .    .         .     .    .       .     .    .          
   97,400       0    0    38,960     0    0  19,480     2    0          new__interpolate_gamma(data, i);
        .       .    .         .     .    .       .     .    .          
  116,880   7,648    1    58,440     0    0  19,480     0    0          gammaH2_1 = data->gammaH2_1[i];
  116,880       0    0    58,440     0    0  19,480     0    0          dgammaH2_1_dT = data->dgammaH2_1_dT[i];
        .       .    .         .     .    .       .     .    .          // fprintf(stderr, ":gammaH2_1 %0.5g , dgammaH2_1_dT: %.5g \n", gammaH2_1, dgammaH2_1_dT  );
        .       .    .         .     .    .       .     .    .          
  116,880  13,379    1    58,440     0    0  19,480     0    0          gammaH2_2 = data->gammaH2_2[i];
  116,880       0    0    58,440     0    0  19,480     0    0          dgammaH2_2_dT = data->dgammaH2_2_dT[i];
        .       .    .         .     .    .       .     .    .          // fprintf(stderr, ":gammaH2_2 %0.5g , dgammaH2_2_dT: %.5g \n", gammaH2_2, dgammaH2_2_dT  );
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .         
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          // update gammaH2
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          // The derivatives of  sum (nkT/(gamma - 1)/mh/density) - ge
        .       .    .         .     .    .       .     .    .          // This is the function we want to minimize
        .       .    .         .     .    .       .     .    .          // which should only be dependent on the first part
2,084,360  91,119   10   954,520     0    0 175,320     0    0          dge_dT = T*kb*(-H2_1*dgammaH2_1_dT/pow(gammaH2_1 - 1.0, 2) - H2_2*dgammaH2_2_dT/pow(gammaH2_2 - 1.0, 2))/(density*mh) + kb*(H2_1/(gammaH2_1 - 1.0) + H2_2/(gammaH2_2 - 1.0) + H_1/(gamma - 1.0) + H_2/(gamma - 1.0) + H_m0/(gamma - 1.0) + He_1/(gamma - 1.0) + He_2/(gamma - 1.0) + He_3/(gamma - 1.0) + de/(gamma - 1.0))/(density*mh);
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .          //This is the change in ge for each iteration
1,363,600  34,971    6   623,360     0    0  19,480     0    0          dge = T*kb*(H2_1/(gammaH2_1 - 1.0) + H2_2/(gammaH2_2 - 1.0) + H_1/(gamma - 1.0) + H_2/(gamma - 1.0) + H_m0/(gamma - 1.0) + He_1/(gamma - 1.0) + He_2/(gamma - 1.0) + He_3/(gamma - 1.0) + de/(gamma - 1.0))/(density*mh) - ge;
        .       .    .         .     .    .       .     .    .  
  116,880       0    0    58,440     0    0  19,480     0    0          Tnew = T - dge/dge_dT;
  116,880       0    0    58,440     0    0  19,480     0    0          data->Ts[i] = Tnew;
        .       .    .         .     .    .       .     .    .          
   97,400       0    0    58,440     0    0  19,480     0    0          Tdiff = fabs(T - Tnew);
        .       .    .         .     .    .       .     .    .          // fprintf(stderr, "T: %0.5g ; Tnew: %0.5g; dge_dT: %.5g, dge: %.5g, ge: %.5g \n", T,Tnew, dge_dT, dge, ge);
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .          // fprintf(stderr,"---------------------\n");
   80,286   8,812    1    40,143     0    0  13,381     0    0          data->Ts[i] = Tnew;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          // fprintf(stderr,"T : %0.5g, density : %0.5g, d_gammaH2: %0.5g \n", Tnew, density, gammaH2 - 7./5.);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .          
        .       .    .         .     .    .       .     .    .  
  120,429   4,950    1    66,905     0    0       0     0    0          if (data->Ts[i] < data->bounds[0]) {
        .       .    .         .     .    .       .     .    .              data->Ts[i] = data->bounds[0];
  120,429   5,084    1    66,905     0    0       0     0    0          } else if (data->Ts[i] > data->bounds[1]) {
        .       .    .         .     .    .       .     .    .              data->Ts[i] = data->bounds[1];
        .       .    .         .     .    .       .     .    .          }
  200,715  13,220    2    93,667     0    0  53,524     0    0          data->logTs[i] = log(data->Ts[i]);
  160,572   8,814    1    80,286     0    0  13,381     0    0          data->invTs[i] = 1.0 / data->Ts[i];
        .       .    .         .     .    .       .     .    .  	    data->dTs_ge[i] = 
  936,670  60,585    6   428,192     0    0  13,381     0    0          density*mh/(kb*(H2_1/(gammaH2 - 1.0) + H2_2/(gammaH2 - 1.0) + H_1/(gamma - 1.0) + H_2/(gamma - 1.0) + H_m0/(gamma - 1.0) + He_1/(gamma - 1.0) + He_2/(gamma - 1.0) + He_3/(gamma - 1.0) + de/(gamma - 1.0)));
        .       .    .         .     .    .       .     .    .          /*fprintf(stderr, "T[%d] = % 0.16g, density = % 0.16g\n",
        .       .    .         .     .    .       .     .    .                  i, data->Ts[i], density);*/
        .       .    .         .     .    .       .     .    .           
   26,762       0    0    26,762     0    0       0     0    0  }
        .       .    .         .     .    .       .     .    .   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  /*
        .       .    .         .     .    .       .     .    .     This setup may be different than the user may anticipate, as a result
        .       .    .         .     .    .       .     .    .     of the lockstep timestep we use for a pencil beam through the grid.
        .       .    .         .     .    .       .     .    .     As such, it accepts the number of things to interpolate and makes
        .       .    .         .     .    .       .     .    .     assumptions about the sizes of the rates.
        .       .    .         .     .    .       .     .    .  */
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  /* This also requires no templating other than for the solver name...*/
        .       .    .         .     .    .       .     .    .  void new__interpolate_rates(new__data *data,
        .       .    .         .     .    .       .     .    .                      int nstrip)
   66,905       0    0         0     0    0  40,143     0    0  {
        .       .    .         .     .    .       .     .    .      int i, bin_id, zbin_id;
        .       .    .         .     .    .       .     .    .      double lb, t1, t2;
        .       .    .         .     .    .       .     .    .      double lbz, z1, z2;
   13,381       0    0         0     0    0  13,381     0    0      int no_photo = 0;
  107,048   6,609    1    53,524     0    0  53,524     0    0      lb = log(data->bounds[0]);
  107,048       0    0    53,524     0    0  40,143     0    0      lbz = log(data->z_bounds[0] + 1.0);
        .       .    .         .     .    .       .     .    .  
   13,381       0    0         0     0    0  13,381     0    0      i = 0;
  227,477   2,770    1   120,429     0    0  26,762     0    0      data->bin_id[i] = bin_id = (int) (data->idbin * (data->logTs[i] - lb));
   93,667   2,769    1    40,143     0    0       0     0    0      if (data->bin_id[i] <= 0) {
        .       .    .         .     .    .       .     .    .          data->bin_id[i] = 0;
  120,429   2,770    1    66,905     0    0       0     0    0      } else if (data->bin_id[i] >= data->nbins) {
        .       .    .         .     .    .       .     .    .          data->bin_id[i] = data->nbins - 1;
        .       .    .         .     .    .       .     .    .      }
   80,286   2,762    1    53,524     0    0  13,381     0    0      t1 = (lb + (bin_id    ) * data->dbin);
  107,048       0    0    53,524     0    0  13,381     0    0      t2 = (lb + (bin_id + 1) * data->dbin);
  187,334   2,288    1   107,048     0    0  13,381     0    0      data->Tdef[i] = (data->logTs[i] - t1)/(t2 - t1);
   93,667   2,277    1    53,524     0    0  13,381     0    0      data->dT[i] = (t2 - t1);
        .       .    .         .     .    .       .     .    .      /*fprintf(stderr, "INTERP: %d, bin_id = %d, dT = % 0.16g, T = % 0.16g, logT = % 0.16g\n",
        .       .    .         .     .    .       .     .    .                  i, data->bin_id[i], data->dT[i], data->Ts[i],
        .       .    .         .     .    .       .     .    .                  data->logTs[i]);*/
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    53,524     0    0       0     0    0      if ((data->current_z >= data->z_bounds[0]) && (data->current_z < data->z_bounds[1])) {
        .       .    .         .     .    .       .     .    .          zbin_id = (int) (data->id_zbin * (log(data->current_z + 1.0) - lbz));
        .       .    .         .     .    .       .     .    .          if (zbin_id <= 0) {
        .       .    .         .     .    .       .     .    .              zbin_id = 0;
        .       .    .         .     .    .       .     .    .          } else if (zbin_id >= data->n_zbins) {
        .       .    .         .     .    .       .     .    .              zbin_id = data->n_zbins - 1;
        .       .    .         .     .    .       .     .    .          }
        .       .    .         .     .    .       .     .    .          z1 = (lbz + (zbin_id    ) * data->d_zbin);
        .       .    .         .     .    .       .     .    .          z2 = (lbz + (zbin_id + 1) * data->d_zbin);
        .       .    .         .     .    .       .     .    .          data->zdef = (log(data->current_z + 1.0) - z1)/(z2 - z1);
        .       .    .         .     .    .       .     .    .          data->dz = (exp(z2) - exp(z1)); //note: given this, we don't have to divide rate of change by z
        .       .    .         .     .    .       .     .    .      } else {
   13,381  13,377    1         0     0    0  13,381     0    0          no_photo = 1;
        .       .    .         .     .    .       .     .    .      }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
   80,286       0    0    40,143     0    0  13,381     0    0      bin_id = data->bin_id[i];
        .       .    .         .     .    .       .     .    .      
   80,286   8,978    1    40,143   470    0       0     0    0          data->rs_k01[i] = data->r_k01[bin_id] +
  307,763  13,378    1   147,191   574    0  13,381 6,861    0              data->Tdef[i] * (data->r_k01[bin_id+1] - data->r_k01[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k01[i] = (data->r_k01[bin_id+1] - data->r_k01[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k01[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k01[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 1,088    0       0     0    0          data->rs_k02[i] = data->r_k02[bin_id] +
  307,763  26,756    2   147,191   507    0  13,381 6,861    0              data->Tdef[i] * (data->r_k02[bin_id+1] - data->r_k02[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k02[i] = (data->r_k02[bin_id+1] - data->r_k02[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k02[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k02[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 1,588    0       0     0    0          data->rs_k03[i] = data->r_k03[bin_id] +
  307,763  16,697    2   147,191   632    0  13,381 1,209    0              data->Tdef[i] * (data->r_k03[bin_id+1] - data->r_k03[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k03[i] = (data->r_k03[bin_id+1] - data->r_k03[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k03[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k03[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 2,288    0       0     0    0          data->rs_k04[i] = data->r_k04[bin_id] +
  307,763  14,460    2   147,191   335    0  13,381 1,209    0              data->Tdef[i] * (data->r_k04[bin_id+1] - data->r_k04[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k04[i] = (data->r_k04[bin_id+1] - data->r_k04[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k04[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k04[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   6,743    1    40,143 2,518    0       0     0    0          data->rs_k05[i] = data->r_k05[bin_id] +
  307,763  13,377    1   147,191   362    0  13,381 1,209    0              data->Tdef[i] * (data->r_k05[bin_id+1] - data->r_k05[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k05[i] = (data->r_k05[bin_id+1] - data->r_k05[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k05[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k05[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286  13,381    1    40,143 2,384    0       0     0    0          data->rs_k06[i] = data->r_k06[bin_id] +
  307,763   7,829    1   147,191   824    0  13,381 1,209    0              data->Tdef[i] * (data->r_k06[bin_id+1] - data->r_k06[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k06[i] = (data->r_k06[bin_id+1] - data->r_k06[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k06[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k06[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 2,787    0       0     0    0          data->rs_k07[i] = data->r_k07[bin_id] +
  307,763  26,762    2   147,191   264    0  13,381     1    0              data->Tdef[i] * (data->r_k07[bin_id+1] - data->r_k07[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k07[i] = (data->r_k07[bin_id+1] - data->r_k07[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k07[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k07[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 2,324    0       0     0    0          data->rs_k08[i] = data->r_k08[bin_id] +
  307,763  25,550    2   147,191   229    0  13,381     1    0              data->Tdef[i] * (data->r_k08[bin_id+1] - data->r_k08[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k08[i] = (data->r_k08[bin_id+1] - data->r_k08[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k08[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k08[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 2,208    0       0     0    0          data->rs_k09[i] = data->r_k09[bin_id] +
  307,763  23,512    2   147,191   314    0  13,381    51    0              data->Tdef[i] * (data->r_k09[bin_id+1] - data->r_k09[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k09[i] = (data->r_k09[bin_id+1] - data->r_k09[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k09[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k09[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 2,055    0       0     0    0          data->rs_k10[i] = data->r_k10[bin_id] +
  307,763  13,252    2   147,191   212    0  13,381    57    0              data->Tdef[i] * (data->r_k10[bin_id+1] - data->r_k10[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k10[i] = (data->r_k10[bin_id+1] - data->r_k10[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k10[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k10[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 1,285    0       0     0    0          data->rs_k11[i] = data->r_k11[bin_id] +
  307,763  13,865    2   147,191   133    0  13,381     1    0              data->Tdef[i] * (data->r_k11[bin_id+1] - data->r_k11[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k11[i] = (data->r_k11[bin_id+1] - data->r_k11[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k11[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k11[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 1,122    0       0     0    0          data->rs_k12[i] = data->r_k12[bin_id] +
  307,763  21,030    2   147,191   114    0  13,381   101    0              data->Tdef[i] * (data->r_k12[bin_id+1] - data->r_k12[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k12[i] = (data->r_k12[bin_id+1] - data->r_k12[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k12[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k12[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143   977    0       0     0    0          data->rs_k13[i] = data->r_k13[bin_id] +
  307,763  21,032    2   147,191   115    0  13,381   106    0              data->Tdef[i] * (data->r_k13[bin_id+1] - data->r_k13[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k13[i] = (data->r_k13[bin_id+1] - data->r_k13[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k13[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k13[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143   752    0       0     0    0          data->rs_k14[i] = data->r_k14[bin_id] +
  307,763  22,192    2   147,191   159    0  13,381   101    0              data->Tdef[i] * (data->r_k14[bin_id+1] - data->r_k14[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k14[i] = (data->r_k14[bin_id+1] - data->r_k14[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k14[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k14[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143   732    0       0     0    0          data->rs_k15[i] = data->r_k15[bin_id] +
  307,763  22,191    2   147,191   242    0  13,381     6    0              data->Tdef[i] * (data->r_k15[bin_id+1] - data->r_k15[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k15[i] = (data->r_k15[bin_id+1] - data->r_k15[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k15[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k15[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143   834    0       0     0    0          data->rs_k16[i] = data->r_k16[bin_id] +
  307,763  12,886    2   147,191   138    0  13,381    75    0              data->Tdef[i] * (data->r_k16[bin_id+1] - data->r_k16[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k16[i] = (data->r_k16[bin_id+1] - data->r_k16[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k16[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k16[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143   846    0       0     0    0          data->rs_k17[i] = data->r_k17[bin_id] +
  307,763  12,281    2   147,191   144    0  13,381    75    0              data->Tdef[i] * (data->r_k17[bin_id+1] - data->r_k17[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k17[i] = (data->r_k17[bin_id+1] - data->r_k17[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k17[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k17[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143 1,039    0       0     0    0          data->rs_k18[i] = data->r_k18[bin_id] +
  307,763   7,652    1   147,191   384    0  13,381    75    0              data->Tdef[i] * (data->r_k18[bin_id+1] - data->r_k18[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k18[i] = (data->r_k18[bin_id+1] - data->r_k18[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k18[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k18[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   6,609    1    40,143 1,234    0       0     0    0          data->rs_k19[i] = data->r_k19[bin_id] +
  307,763   2,594    1   147,191   161    0  13,381     2    0              data->Tdef[i] * (data->r_k19[bin_id+1] - data->r_k19[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k19[i] = (data->r_k19[bin_id+1] - data->r_k19[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k19[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k19[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   3,350    1    40,143 1,144    0       0     0    0          data->rs_k21[i] = data->r_k21[bin_id] +
  307,763   7,652    1   147,191   234    0  13,381    19    0              data->Tdef[i] * (data->r_k21[bin_id+1] - data->r_k21[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k21[i] = (data->r_k21[bin_id+1] - data->r_k21[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k21[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k21[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   7,652    1    40,143 1,249    0       0     0    0          data->rs_k22[i] = data->r_k22[bin_id] +
  307,763   8,812    1   147,191   431    0  13,381    19    0              data->Tdef[i] * (data->r_k22[bin_id+1] - data->r_k22[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k22[i] = (data->r_k22[bin_id+1] - data->r_k22[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->drs_k22[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->drs_k22[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   4,950    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 1,400    0       0     0    0          data->cs_brem_brem[i] = data->c_brem_brem[bin_id] +
  307,763  13,896    2   147,191   236    0  13,381    19    0              data->Tdef[i] * (data->c_brem_brem[bin_id+1] - data->c_brem_brem[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_brem_brem[i] = (data->c_brem_brem[bin_id+1] - data->c_brem_brem[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_brem_brem[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_brem_brem[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 1,242    0       0     0    0          data->cs_ceHeI_ceHeI[i] = data->c_ceHeI_ceHeI[bin_id] +
  307,763  15,424    2   147,191   203    0  13,381     1    0              data->Tdef[i] * (data->c_ceHeI_ceHeI[bin_id+1] - data->c_ceHeI_ceHeI[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ceHeI_ceHeI[i] = (data->c_ceHeI_ceHeI[bin_id+1] - data->c_ceHeI_ceHeI[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ceHeI_ceHeI[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ceHeI_ceHeI[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  13,381    1    40,143 1,297    0       0     0    0          data->cs_ceHeII_ceHeII[i] = data->c_ceHeII_ceHeII[bin_id] +
  307,763  13,381    1   147,191   319    0  13,381     2    0              data->Tdef[i] * (data->c_ceHeII_ceHeII[bin_id+1] - data->c_ceHeII_ceHeII[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ceHeII_ceHeII[i] = (data->c_ceHeII_ceHeII[bin_id+1] - data->c_ceHeII_ceHeII[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ceHeII_ceHeII[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ceHeII_ceHeII[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   2,422    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 1,384    0       0     0    0          data->cs_ceHI_ceHI[i] = data->c_ceHI_ceHI[bin_id] +
  307,763  23,751    2   147,191   353    0  13,381    44    0              data->Tdef[i] * (data->c_ceHI_ceHI[bin_id+1] - data->c_ceHI_ceHI[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ceHI_ceHI[i] = (data->c_ceHI_ceHI[bin_id+1] - data->c_ceHI_ceHI[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ceHI_ceHI[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ceHI_ceHI[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286   7,650    1    40,143 1,290    0       0     0    0          data->cs_ciHeI_ciHeI[i] = data->c_ciHeI_ciHeI[bin_id] +
  307,763   6,609    1   147,191   344    0  13,381    44    0              data->Tdef[i] * (data->c_ciHeI_ciHeI[bin_id+1] - data->c_ciHeI_ciHeI[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHeI_ciHeI[i] = (data->c_ciHeI_ciHeI[bin_id+1] - data->c_ciHeI_ciHeI[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHeI_ciHeI[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ciHeI_ciHeI[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286   2,770    1    40,143 1,448    0       0     0    0          data->cs_ciHeII_ciHeII[i] = data->c_ciHeII_ciHeII[bin_id] +
  307,763   2,769    1   147,191   458    0  13,381     8    0              data->Tdef[i] * (data->c_ciHeII_ciHeII[bin_id+1] - data->c_ciHeII_ciHeII[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHeII_ciHeII[i] = (data->c_ciHeII_ciHeII[bin_id+1] - data->c_ciHeII_ciHeII[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHeII_ciHeII[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ciHeII_ciHeII[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   2,770    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 1,735    0       0     0    0          data->cs_ciHeIS_ciHeIS[i] = data->c_ciHeIS_ciHeIS[bin_id] +
  307,763   5,050    2   147,191   614    0  13,381     8    0              data->Tdef[i] * (data->c_ciHeIS_ciHeIS[bin_id+1] - data->c_ciHeIS_ciHeIS[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHeIS_ciHeIS[i] = (data->c_ciHeIS_ciHeIS[bin_id+1] - data->c_ciHeIS_ciHeIS[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHeIS_ciHeIS[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ciHeIS_ciHeIS[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286   2,277    1    40,143 2,086    0       0     0    0          data->cs_ciHI_ciHI[i] = data->c_ciHI_ciHI[bin_id] +
  307,763   2,263    1   147,191   754    0  13,381    58    0              data->Tdef[i] * (data->c_ciHI_ciHI[bin_id+1] - data->c_ciHI_ciHI[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHI_ciHI[i] = (data->c_ciHI_ciHI[bin_id+1] - data->c_ciHI_ciHI[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_ciHI_ciHI[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_ciHI_ciHI[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   2,263    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 2,547    0       0     0    0          data->cs_compton_comp_[i] = data->c_compton_comp_[bin_id] +
  307,763   2,288    1   147,191   850    0  13,381    58    0              data->Tdef[i] * (data->c_compton_comp_[bin_id+1] - data->c_compton_comp_[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_compton_comp_[i] = (data->c_compton_comp_[bin_id+1] - data->c_compton_comp_[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_compton_comp_[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_compton_comp_[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   8,810    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 3,509    0       0     0    0          data->cs_gammah_gammah[i] = data->c_gammah_gammah[bin_id] +
  307,763  22,355    2   147,191   939    0  13,381   157    0              data->Tdef[i] * (data->c_gammah_gammah[bin_id+1] - data->c_gammah_gammah[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gammah_gammah[i] = (data->c_gammah_gammah[bin_id+1] - data->c_gammah_gammah[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gammah_gammah[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gammah_gammah[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  13,378    1    40,143 4,196    0       0     0    0          data->cs_gloverabel08_gael[i] = data->c_gloverabel08_gael[bin_id] +
  307,763  13,378    1   147,191 1,064    0  13,381    58    0              data->Tdef[i] * (data->c_gloverabel08_gael[bin_id+1] - data->c_gloverabel08_gael[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gael[i] = (data->c_gloverabel08_gael[bin_id+1] - data->c_gloverabel08_gael[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gael[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gael[i] *= data->invTs[i];
   80,286  13,378    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 4,992    0       0     0    0          data->cs_gloverabel08_gaH2[i] = data->c_gloverabel08_gaH2[bin_id] +
  307,763  16,697    2   147,191 1,156    0  13,381   157    0              data->Tdef[i] * (data->c_gloverabel08_gaH2[bin_id+1] - data->c_gloverabel08_gaH2[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaH2[i] = (data->c_gloverabel08_gaH2[bin_id+1] - data->c_gloverabel08_gaH2[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaH2[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gaH2[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286   9,001    1    40,143 5,667    0       0     0    0          data->cs_gloverabel08_gaHe[i] = data->c_gloverabel08_gaHe[bin_id] +
  307,763   5,459    1   147,191 1,117    0  13,381   157    0              data->Tdef[i] * (data->c_gloverabel08_gaHe[bin_id+1] - data->c_gloverabel08_gaHe[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaHe[i] = (data->c_gloverabel08_gaHe[bin_id+1] - data->c_gloverabel08_gaHe[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaHe[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gaHe[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  13,377    1    40,143 5,788    0       0     0    0          data->cs_gloverabel08_gaHI[i] = data->c_gloverabel08_gaHI[bin_id] +
  307,763   6,743    1   147,191 1,079    0  13,381   375    0              data->Tdef[i] * (data->c_gloverabel08_gaHI[bin_id+1] - data->c_gloverabel08_gaHI[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaHI[i] = (data->c_gloverabel08_gaHI[bin_id+1] - data->c_gloverabel08_gaHI[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaHI[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gaHI[i] *= data->invTs[i];
   80,286   7,829    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 6,078    0       0     0    0          data->cs_gloverabel08_gaHp[i] = data->c_gloverabel08_gaHp[bin_id] +
  307,763  26,762    2   147,191   950    0  13,381   375    0              data->Tdef[i] * (data->c_gloverabel08_gaHp[bin_id+1] - data->c_gloverabel08_gaHp[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaHp[i] = (data->c_gloverabel08_gaHp[bin_id+1] - data->c_gloverabel08_gaHp[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gaHp[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gaHp[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  13,380    1    40,143 5,969    0       0     0    0          data->cs_gloverabel08_gphdl[i] = data->c_gloverabel08_gphdl[bin_id] +
  307,763  13,381    1   147,191   904    0  13,381 3,650    0              data->Tdef[i] * (data->c_gloverabel08_gphdl[bin_id+1] - data->c_gloverabel08_gphdl[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gphdl[i] = (data->c_gloverabel08_gphdl[bin_id+1] - data->c_gloverabel08_gphdl[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gphdl[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gphdl[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  12,170    1    40,143 5,697    0       0     0    0          data->cs_gloverabel08_gpldl[i] = data->c_gloverabel08_gpldl[bin_id] +
  307,763  10,131    1   147,191   837    0  13,381 3,650    0              data->Tdef[i] * (data->c_gloverabel08_gpldl[bin_id+1] - data->c_gloverabel08_gpldl[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gpldl[i] = (data->c_gloverabel08_gpldl[bin_id+1] - data->c_gloverabel08_gpldl[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_gpldl[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_gpldl[i] *= data->invTs[i];
   80,286  13,381    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 5,343    0       0     0    0          data->cs_gloverabel08_h2lte[i] = data->c_gloverabel08_h2lte[bin_id] +
  307,763  13,252    2   147,191   555    0  13,381   475    0              data->Tdef[i] * (data->c_gloverabel08_h2lte[bin_id+1] - data->c_gloverabel08_h2lte[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_h2lte[i] = (data->c_gloverabel08_h2lte[bin_id+1] - data->c_gloverabel08_h2lte[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_gloverabel08_h2lte[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_gloverabel08_h2lte[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 4,682    0       0     0    0          data->cs_h2formation_h2mcool[i] = data->c_h2formation_h2mcool[bin_id] +
  307,763  13,865    2   147,191   480    0  13,381   400    0              data->Tdef[i] * (data->c_h2formation_h2mcool[bin_id+1] - data->c_h2formation_h2mcool[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_h2mcool[i] = (data->c_h2formation_h2mcool[bin_id+1] - data->c_h2formation_h2mcool[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_h2mcool[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_h2formation_h2mcool[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  13,379    1    40,143 3,941    0       0     0    0          data->cs_h2formation_h2mheat[i] = data->c_h2formation_h2mheat[bin_id] +
  307,763   7,651    1   147,191   371    0  13,381   397    0              data->Tdef[i] * (data->c_h2formation_h2mheat[bin_id+1] - data->c_h2formation_h2mheat[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_h2mheat[i] = (data->c_h2formation_h2mheat[bin_id+1] - data->c_h2formation_h2mheat[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_h2mheat[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_h2formation_h2mheat[i] *= data->invTs[i];
   80,286   7,653    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 3,217    0       0     0    0          data->cs_h2formation_ncrd1[i] = data->c_h2formation_ncrd1[bin_id] +
  307,763  22,191    2   147,191   302    0  13,381   483    0              data->Tdef[i] * (data->c_h2formation_ncrd1[bin_id+1] - data->c_h2formation_ncrd1[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_ncrd1[i] = (data->c_h2formation_ncrd1[bin_id+1] - data->c_h2formation_ncrd1[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_ncrd1[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_h2formation_ncrd1[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 2,499    0       0     0    0          data->cs_h2formation_ncrd2[i] = data->c_h2formation_ncrd2[bin_id] +
  307,763  22,192    2   147,191   208    0  13,381   302    0              data->Tdef[i] * (data->c_h2formation_ncrd2[bin_id+1] - data->c_h2formation_ncrd2[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_ncrd2[i] = (data->c_h2formation_ncrd2[bin_id+1] - data->c_h2formation_ncrd2[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_ncrd2[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_h2formation_ncrd2[i] *= data->invTs[i];
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286  13,379    1    40,143 1,992    0       0     0    0          data->cs_h2formation_ncrn[i] = data->c_h2formation_ncrn[bin_id] +
  307,763   5,166    1   147,191   189    0  13,381   454    0              data->Tdef[i] * (data->c_h2formation_ncrn[bin_id+1] - data->c_h2formation_ncrn[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_ncrn[i] = (data->c_h2formation_ncrn[bin_id+1] - data->c_h2formation_ncrn[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_h2formation_ncrn[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_h2formation_ncrn[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   7,720    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 1,580    0       0     0    0          data->cs_reHeII1_reHeII1[i] = data->c_reHeII1_reHeII1[bin_id] +
  307,763  12,281    2   147,191    49    0  13,381   699    0              data->Tdef[i] * (data->c_reHeII1_reHeII1[bin_id+1] - data->c_reHeII1_reHeII1[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_reHeII1_reHeII1[i] = (data->c_reHeII1_reHeII1[bin_id+1] - data->c_reHeII1_reHeII1[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_reHeII1_reHeII1[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_reHeII1_reHeII1[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143 1,157    0       0     0    0          data->cs_reHeII2_reHeII2[i] = data->c_reHeII2_reHeII2[bin_id] +
  307,763  14,261    2   147,191   121    0  13,381   699    0              data->Tdef[i] * (data->c_reHeII2_reHeII2[bin_id+1] - data->c_reHeII2_reHeII2[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_reHeII2_reHeII2[i] = (data->c_reHeII2_reHeII2[bin_id+1] - data->c_reHeII2_reHeII2[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_reHeII2_reHeII2[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_reHeII2_reHeII2[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286   2,594    1    40,143 1,060    0       0     0    0          data->cs_reHeIII_reHeIII[i] = data->c_reHeIII_reHeIII[bin_id] +
  307,763   3,350    1   147,191   149    0  13,381   536    0              data->Tdef[i] * (data->c_reHeIII_reHeIII[bin_id+1] - data->c_reHeIII_reHeIII[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_reHeIII_reHeIII[i] = (data->c_reHeIII_reHeIII[bin_id+1] - data->c_reHeIII_reHeIII[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_reHeIII_reHeIII[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_reHeIII_reHeIII[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
   80,286   7,652    1    40,143     0    0  13,381     0    0          bin_id = data->bin_id[i];
   80,286       0    0    40,143   971    0       0     0    0          data->cs_reHII_reHII[i] = data->c_reHII_reHII[bin_id] +
  307,763   7,652    1   147,191   109    0  13,381     0    0              data->Tdef[i] * (data->c_reHII_reHII[bin_id+1] - data->c_reHII_reHII[bin_id]);
        .       .    .         .     .    .       .     .    .          // data->dcs_reHII_reHII[i] = (data->c_reHII_reHII[bin_id+1] - data->c_reHII_reHII[bin_id]);;
        .       .    .         .     .    .       .     .    .          // data->dcs_reHII_reHII[i] /= data->dT[i];
        .       .    .         .     .    .       .     .    .  	// data->dcs_reHII_reHII[i] *= data->invTs[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
   26,762       0    0    26,762     0    0       0     0    0  }
        .       .    .         .     .    .       .     .    .   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  void new__interpolate_gamma(new__data *data,
        .       .    .         .     .    .       .     .    .                      int i)
   97,400   3,162    1         0     0    0  58,440     1    0  {   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /*
        .       .    .         .     .    .       .     .    .       * find the bin_id for the given temperature 
        .       .    .         .     .    .       .     .    .       * update dT for i_th strip
        .       .    .         .     .    .       .     .    .       */
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      int bin_id, zbin_id;
        .       .    .         .     .    .       .     .    .      double lb, t1, t2;
        .       .    .         .     .    .       .     .    .      double lbz, z1, z2;
   19,480       0    0         0     0    0  19,480     0    0      int no_photo = 0;
  155,840   4,950    1    77,920     1    0  77,920     0    0      lb = log(data->bounds[0]);
  155,840       0    0    77,920     0    0  58,440     0    0      lbz = log(data->z_bounds[0] + 1.0);
        .       .    .         .     .    .       .     .    .      
  331,160   5,084    1   175,320 5,741    0  38,960     4    0      data->bin_id[i] = bin_id = (int) (data->idbin * (data->logTs[i] - lb));
  136,360   8,812    1    58,440     0    0       0     0    0      if (data->bin_id[i] <= 0) {
        .       .    .         .     .    .       .     .    .          data->bin_id[i] = 0;
  175,320   6,610    1    97,400     0    0       0     0    0      } else if (data->bin_id[i] >= data->nbins) {
        .       .    .         .     .    .       .     .    .          data->bin_id[i] = data->nbins - 1;
        .       .    .         .     .    .       .     .    .      }
  116,880       0    0    77,920     0    0  19,480     0    0      t1 = (lb + (bin_id    ) * data->dbin);
  155,840   8,814    1    77,920     0    0  19,480     0    0      t2 = (lb + (bin_id + 1) * data->dbin);
  272,720  13,381    1   155,840     0    0  19,480     0    0      data->Tdef[i] = (data->logTs[i] - t1)/(t2 - t1);
  136,360       0    0    77,920     0    0  19,480     0    0      data->dT[i] = (t2 - t1);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
  116,880  13,381    1    58,440     0    0  19,480     0    0      bin_id = data->bin_id[i];
  116,880       0    0    58,440   664    0       0     0    0      data->gammaH2_2[i] = data->g_gammaH2_2[bin_id] +
  448,040  12,796    2   214,280     4    0  19,480     0    0          data->Tdef[i] * (data->g_gammaH2_2[bin_id+1] - data->g_gammaH2_2[bin_id]);
        .       .    .         .     .    .       .     .    .  
  116,880       0    0    58,440   664    0       0     0    0      data->dgammaH2_2_dT[i] = data->g_dgammaH2_2_dT[bin_id] +
  233,760  13,377    1   116,880     4    0       0     0    0          data->Tdef[i] * (data->g_dgammaH2_2_dT[bin_id+1] 
  214,280   7,650    1    97,400     0    0  19,480     0    0          - data->g_dgammaH2_2_dT[bin_id]);
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
  116,880       0    0    58,440     0    0  19,480     0    0      bin_id = data->bin_id[i];
  116,880       0    0    58,440   840    0       0     0    0      data->gammaH2_1[i] = data->g_gammaH2_1[bin_id] +
  448,040   9,379    2   214,280    31    0  19,480   536    0          data->Tdef[i] * (data->g_gammaH2_1[bin_id+1] - data->g_gammaH2_1[bin_id]);
        .       .    .         .     .    .       .     .    .  
  116,880       0    0    58,440   840    0       0     0    0      data->dgammaH2_1_dT[i] = data->g_dgammaH2_1_dT[bin_id] +
  233,760   2,769    1   116,880    31    0       0     0    0          data->Tdef[i] * (data->g_dgammaH2_1_dT[bin_id+1] 
  214,280   2,770    1    97,400     0    0  19,480     0    0          - data->g_dgammaH2_1_dT[bin_id]);
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .         
   38,960       0    0    38,960     0    0       0     0    0      }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  void ensure_electron_consistency(double *input, int nstrip, int nchem)
        .       .    .         .     .    .       .     .    .  {
-- line 1389 ----------------------------------------
-- line 1591 ----------------------------------------
        .       .    .         .     .    .       .     .    .   
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  int calculate_jacobian_new_( realtype t,
        .       .    .         .     .    .       .     .    .                                          N_Vector y, N_Vector fy,
        .       .    .         .     .    .       .     .    .                                          SUNMatrix J, void *user_data,
        .       .    .         .     .    .       .     .    .                                          N_Vector tmp1, N_Vector tmp2,
        .       .    .         .     .    .       .     .    .                                          N_Vector tmp3)
   24,871   4,522    2         0     0    0  20,349     0    0  {
        .       .    .         .     .    .       .     .    .      /* We iterate over all of the rates */
        .       .    .         .     .    .       .     .    .      /* Calcuate temperature first */
        .       .    .         .     .    .       .     .    .      
    2,261       0    0         0     0    0   2,261     0    0      int nstrip = 1;
    2,261       0    0         0     0    0   2,261     0    0      int nchem = 10;
        .       .    .         .     .    .       .     .    .  
    4,522       0    0     2,261     0    0   2,261     0    0      new__data *data = (new__data*)user_data; 
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      int i, j;
    2,261       0    0         0     0    0   2,261     0    0      j = 0;
        .       .    .         .     .    .       .     .    .      /* change N_Vector back to an array */
        .       .    .         .     .    .       .     .    .      double y_arr[ 10 ];
   11,305   2,261    1     9,044     0    0   2,261     0    0      y_arr[0] = NV_Ith_S(y , 0);
   11,305       0    0     9,044     0    0   2,261     0    0      y_arr[1] = NV_Ith_S(y , 1);
   11,305       0    0     9,044     0    0   2,261     0    0      y_arr[2] = NV_Ith_S(y , 2);
   11,305   2,261    1     9,044     0    0   2,261     0    0      y_arr[3] = NV_Ith_S(y , 3);
   11,305       0    0     9,044     0    0   2,261     0    0      y_arr[4] = NV_Ith_S(y , 4);
   11,305       0    0     9,044     0    0   2,261     0    0      y_arr[5] = NV_Ith_S(y , 5);
   11,305   2,261    1     9,044     0    0   2,261     0    0      y_arr[6] = NV_Ith_S(y , 6);
   11,305       0    0     9,044     0    0   2,261     0    0      y_arr[7] = NV_Ith_S(y , 7);
   11,305       0    0     9,044     0    0   2,261     0    0      y_arr[8] = NV_Ith_S(y , 8);
   11,305   2,261    1     9,044     0    0   2,261     0    0      y_arr[9] = NV_Ith_S(y , 9);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      // new__calculate_temperature(data, y_arr, nstrip, nchem);
        .       .    .         .     .    .       .     .    .      // new__interpolate_rates(data, nstrip);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Now We set up some temporaries */
        .       .    .         .     .    .       .     .    .  
    6,783       0    0     2,261     0    0   2,261     0    0      double *Tge = data->dTs_ge;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k01 = data->rs_k01;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk01 = data->drs_k01;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k02 = data->rs_k02;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk02 = data->drs_k02;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *k03 = data->rs_k03;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk03 = data->drs_k03;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k04 = data->rs_k04;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk04 = data->drs_k04;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k05 = data->rs_k05;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk05 = data->drs_k05;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k06 = data->rs_k06;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk06 = data->drs_k06;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k07 = data->rs_k07;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk07 = data->drs_k07;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *k08 = data->rs_k08;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk08 = data->drs_k08;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k09 = data->rs_k09;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk09 = data->drs_k09;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k10 = data->rs_k10;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk10 = data->drs_k10;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *k11 = data->rs_k11;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk11 = data->drs_k11;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k12 = data->rs_k12;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk12 = data->drs_k12;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k13 = data->rs_k13;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk13 = data->drs_k13;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k14 = data->rs_k14;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk14 = data->drs_k14;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k15 = data->rs_k15;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk15 = data->drs_k15;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *k16 = data->rs_k16;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk16 = data->drs_k16;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k17 = data->rs_k17;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk17 = data->drs_k17;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k18 = data->rs_k18;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk18 = data->drs_k18;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *k19 = data->rs_k19;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk19 = data->drs_k19;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k21 = data->rs_k21;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rk21 = data->drs_k21;
    6,783       0    0     2,261     0    0   2,261     0    0      double *k22 = data->rs_k22;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rk22 = data->drs_k22;
    6,783       0    0     2,261     0    0   2,261     0    0      double *brem_brem = data->cs_brem_brem;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rbrem_brem = data->dcs_brem_brem;
    6,783       0    0     2,261     0    0   2,261     0    0      double *ceHeI_ceHeI = data->cs_ceHeI_ceHeI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rceHeI_ceHeI = data->dcs_ceHeI_ceHeI;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *ceHeII_ceHeII = data->cs_ceHeII_ceHeII;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rceHeII_ceHeII = data->dcs_ceHeII_ceHeII;
    6,783       0    0     2,261     0    0   2,261     0    0      double *ceHI_ceHI = data->cs_ceHI_ceHI;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rceHI_ceHI = data->dcs_ceHI_ceHI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *ciHeI_ciHeI = data->cs_ciHeI_ciHeI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rciHeI_ciHeI = data->dcs_ciHeI_ciHeI;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *ciHeII_ciHeII = data->cs_ciHeII_ciHeII;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rciHeII_ciHeII = data->dcs_ciHeII_ciHeII;
    6,783       0    0     2,261     0    0   2,261     0    0      double *ciHeIS_ciHeIS = data->cs_ciHeIS_ciHeIS;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rciHeIS_ciHeIS = data->dcs_ciHeIS_ciHeIS;
    6,783       0    0     2,261     0    0   2,261     0    0      double *ciHI_ciHI = data->cs_ciHI_ciHI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rciHI_ciHI = data->dcs_ciHI_ciHI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *compton_comp_ = data->cs_compton_comp_;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rcompton_comp_ = data->dcs_compton_comp_;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gammah_gammah = data->cs_gammah_gammah;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rgammah_gammah = data->dcs_gammah_gammah;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *gloverabel08_gael = data->cs_gloverabel08_gael;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rgloverabel08_gael = data->dcs_gloverabel08_gael;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gloverabel08_gaH2 = data->cs_gloverabel08_gaH2;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rgloverabel08_gaH2 = data->dcs_gloverabel08_gaH2;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gloverabel08_gaHe = data->cs_gloverabel08_gaHe;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rgloverabel08_gaHe = data->dcs_gloverabel08_gaHe;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *gloverabel08_gaHI = data->cs_gloverabel08_gaHI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rgloverabel08_gaHI = data->dcs_gloverabel08_gaHI;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gloverabel08_gaHp = data->cs_gloverabel08_gaHp;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rgloverabel08_gaHp = data->dcs_gloverabel08_gaHp;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gloverabel08_gphdl = data->cs_gloverabel08_gphdl;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rgloverabel08_gphdl = data->dcs_gloverabel08_gphdl;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gloverabel08_gpldl = data->cs_gloverabel08_gpldl;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rgloverabel08_gpldl = data->dcs_gloverabel08_gpldl;
    6,783       0    0     2,261     0    0   2,261     0    0      double *gloverabel08_h2lte = data->cs_gloverabel08_h2lte;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rgloverabel08_h2lte = data->dcs_gloverabel08_h2lte;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *h2formation_h2mcool = data->cs_h2formation_h2mcool;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rh2formation_h2mcool = data->dcs_h2formation_h2mcool;
    6,783       0    0     2,261     0    0   2,261     0    0      double *h2formation_h2mheat = data->cs_h2formation_h2mheat;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rh2formation_h2mheat = data->dcs_h2formation_h2mheat;
    6,783       0    0     2,261     0    0   2,261     0    0      double *h2formation_ncrd1 = data->cs_h2formation_ncrd1;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rh2formation_ncrd1 = data->dcs_h2formation_ncrd1;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *h2formation_ncrd2 = data->cs_h2formation_ncrd2;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rh2formation_ncrd2 = data->dcs_h2formation_ncrd2;
    6,783       0    0     2,261     0    0   2,261     0    0      double *h2formation_ncrn = data->cs_h2formation_ncrn;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rh2formation_ncrn = data->dcs_h2formation_ncrn;
    6,783       0    0     2,261     0    0   2,261     0    0      double *reHeII1_reHeII1 = data->cs_reHeII1_reHeII1;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rreHeII1_reHeII1 = data->dcs_reHeII1_reHeII1;
    6,783       0    0     2,261     0    0   2,261     0    0      double *reHeII2_reHeII2 = data->cs_reHeII2_reHeII2;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *rreHeII2_reHeII2 = data->dcs_reHeII2_reHeII2;
    6,783       0    0     2,261     0    0   2,261     0    0      double *reHeIII_reHeIII = data->cs_reHeIII_reHeIII;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rreHeIII_reHeIII = data->dcs_reHeIII_reHeIII;
    6,783   2,261    1     2,261     0    0   2,261     0    0      double *reHII_reHII = data->cs_reHII_reHII;
    6,783       0    0     2,261     0    0   2,261     0    0      double *rreHII_reHII = data->dcs_reHII_reHII;
        .       .    .         .     .    .       .     .    .      double H2_1;
        .       .    .         .     .    .       .     .    .      double H2_2;
        .       .    .         .     .    .       .     .    .      double H_1;
        .       .    .         .     .    .       .     .    .      double H_2;
        .       .    .         .     .    .       .     .    .      double H_m0;
        .       .    .         .     .    .       .     .    .      double He_1;
        .       .    .         .     .    .       .     .    .      double He_2;
        .       .    .         .     .    .       .     .    .      double He_3;
        .       .    .         .     .    .       .     .    .      double de;
        .       .    .         .     .    .       .     .    .      double ge;
        .       .    .         .     .    .       .     .    .      double z;
        .       .    .         .     .    .       .     .    .      double T;
        .       .    .         .     .    .       .     .    .  
    4,522       0    0         0     0    0   2,261     0    0      double mh = 1.67e-24;
        .       .    .         .     .    .       .     .    .      double mdensity, inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      int jj;
    2,261       0    0         0     0    0   2,261     0    0      jj = 0;
        .       .    .         .     .    .       .     .    .      double scale, scale1, inv_scale2;
        .       .    .         .     .    .       .     .    .  
    2,261   2,261    1         0     0    0   2,261     0    0      j = 0;
    4,522       0    0         0     0    0   2,261     0    0      mdensity = 0.0;
    6,783       0    0     4,522     0    0   2,261     0    0      z = data->current_z;
   13,566   2,261    1     6,783     0    0   2,261     0    0      scale = data->scale[j];
   13,566       0    0    11,305     0    0   2,261     0    0      H2_1 = NV_Ith_S( y, 0  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      mdensity += H2_1 * 2.01588;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827   2,261    1    11,305     0    0   2,261     0    0      H2_2 = NV_Ith_S( y, 1  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      mdensity += H2_2 * 2.01588;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827   2,261    1    11,305     0    0   2,261     0    0      H_1 = NV_Ith_S( y, 2  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      mdensity += H_1 * 1.00794;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261   2,261    1     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827   2,261    1    11,305     0    0   2,261     0    0      H_2 = NV_Ith_S( y, 3  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      mdensity += H_2 * 1.00794;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827   2,261    1    11,305     0    0   2,261     0    0      H_m0 = NV_Ith_S( y, 4  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      mdensity += H_m0 * 1.00794;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827       0    0    11,305     0    0   2,261     0    0      He_1 = NV_Ith_S( y, 5  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      mdensity += He_1 * 4.002602;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827       0    0    11,305     0    0   2,261     0    0      He_2 = NV_Ith_S( y, 6  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      mdensity += He_2 * 4.002602;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827       0    0    11,305     0    0   2,261     0    0      He_3 = NV_Ith_S( y, 7  )*scale;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      mdensity += He_3 * 4.002602;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566       0    0     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827   2,261    1    11,305     0    0   2,261     0    0      de = NV_Ith_S( y, 8  )*scale;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
   13,566   2,261    1     6,783     0    0   2,261     0    0      scale = data->scale[j];
   15,827       0    0    11,305     0    0   2,261     0    0      ge = NV_Ith_S( y, 9  )*scale;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    2,261       0    0     2,261     0    0       0     0    0      j++;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
    6,783   2,261    1     4,522     0    0   2,261     0    0      mdensity *= mh;
    6,783       0    0     4,522     0    0   2,261     0    0      inv_mdensity = 1.0 / mdensity; 
    2,261       0    0         0     0    0   2,261     0    0      i = 0;
    9,044   2,261    1     6,783     0    0   2,261     0    0      j = i * nchem * nchem;
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H2_1
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by H2_1
        .       .    .         .     .    .       .     .    .      
  106,267   9,044    4    56,525     0    0  13,566     2    0      IJth(J, 1, 1 ) = -k11[i]*H_2 - k12[i]*de - k13[i]*H_1 + k21[i]*pow(H_1, 2);
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   29,393   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by H2_1
        .       .    .         .     .    .       .     .    .      
   29,393   2,261    1    18,088     0    0   2,261     0    0      IJth(J, 2, 1 ) = k11[i]*H_2;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by H2_1
        .       .    .         .     .    .       .     .    .      
  119,833   9,044    4    54,264     0    0  13,566     0    0      IJth(J, 3, 1 ) = k11[i]*H_2 + 2*k12[i]*de + 2*k13[i]*H_1 - 2*k21[i]*pow(H_1, 2);
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by H2_1
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 4, 1 ) = -k11[i]*H_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 4, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by H2_1
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 5, 1 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by H2_1
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 1 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by H2_1
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 7, 1 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by H2_1
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 8, 1 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by H2_1
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 9, 1 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by H2_1
        .       .    .         .     .    .       .     .    .      
  759,696  63,308   28   345,933     3    0  52,003     0    0      IJth(J, 10, 1 ) = -H2_1*gloverabel08_gaH2[i]*pow(gloverabel08_h2lte[i], 2)/(pow(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0, 2)*pow(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i], 2)) - 0.5*H_1*h2formation_h2mcool[i]*1.0/(h2formation_ncrn[i]/(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i]) + 1.0) - gloverabel08_h2lte[i]/(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0) + 0.5*h2formation_ncrd2[i]*h2formation_ncrn[i]*pow(h2formation_ncrn[i]/(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i]) + 1.0, -2.0)*(-H2_1*H_1*h2formation_h2mcool[i] + pow(H_1, 3)*h2formation_h2mheat[i])/pow(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i], 2);
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[0];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 1) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   29,393   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 1 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H2_2
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by H2_2
        .       .    .         .     .    .       .     .    .      
   49,742   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 1, 2 ) = k10[i]*H_1 + k19[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by H2_2
        .       .    .         .     .    .       .     .    .      
   72,352   6,783    3    38,437     0    0   2,261     0    0      IJth(J, 2, 2 ) = -k10[i]*H_1 - k18[i]*de - k19[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by H2_2
        .       .    .         .     .    .       .     .    .      
   76,874   6,783    3    38,437     0    0   2,261     0    0      IJth(J, 3, 2 ) = -k10[i]*H_1 + 2*k18[i]*de + k19[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by H2_2
        .       .    .         .     .    .       .     .    .      
   31,654   2,261    1    18,088     0    0   2,261     0    0      IJth(J, 4, 2 ) = k10[i]*H_1;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 4, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by H2_2
        .       .    .         .     .    .       .     .    .      
   36,176   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 5, 2 ) = -k19[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 5, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by H2_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 2 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by H2_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 7, 2 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by H2_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 8, 2 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by H2_2
        .       .    .         .     .    .       .     .    .      
   36,176   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 9, 2 ) = -k18[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by H2_2
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 10, 2 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[1];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 2) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 2 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H_1
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by H_1
        .       .    .         .     .    .       .     .    .      
  137,921  13,566    6    67,830     0    0  13,566     0    0      IJth(J, 1, 3 ) = k08[i]*H_m0 + k10[i]*H2_2 - k13[i]*H2_1 + 2*k21[i]*H2_1*H_1 + 3*k22[i]*pow(H_1, 2);
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by H_1
        .       .    .         .     .    .       .     .    .      
   49,742   4,522    2    27,132     1    0   2,261     0    0      IJth(J, 2, 3 ) = k09[i]*H_2 - k10[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 2, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by H_1
        .       .    .         .     .    .       .     .    .      
  221,578  18,088    8   108,528   105    0  13,566     0    0      IJth(J, 3, 3 ) = -k01[i]*de - k07[i]*de - k08[i]*H_m0 - k09[i]*H_2 - k10[i]*H2_2 + 2*k13[i]*H2_1 + k15[i]*H_m0 - 4*k21[i]*H2_1*H_1 - 6*k22[i]*pow(H_1, 2);
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 3, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by H_1
        .       .    .         .     .    .       .     .    .      
   70,091   4,522    2    36,176     0    0   2,261     0    0      IJth(J, 4, 3 ) = k01[i]*de - k09[i]*H_2 + k10[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 4, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by H_1
        .       .    .         .     .    .       .     .    .      
   67,830   4,522    2    36,176     0    0   2,261     0    0      IJth(J, 5, 3 ) = k07[i]*de - k08[i]*H_m0 - k15[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by H_1
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 3 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by H_1
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 7, 3 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by H_1
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 8, 3 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by H_1
        .       .    .         .     .    .       .     .    .      
   88,179   9,044    4    45,220     0    0   2,261     0    0      IJth(J, 9, 3 ) = k01[i]*de - k07[i]*de + k08[i]*H_m0 + k15[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by H_1
        .       .    .         .     .    .       .     .    .      
  714,476  63,308   28   325,584     0    0  63,308     0    0      IJth(J, 10, 3 ) = -H2_1*gloverabel08_gaHI[i]*pow(gloverabel08_h2lte[i], 2)/(pow(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0, 2)*pow(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i], 2)) - ceHI_ceHI[i]*de - ciHI_ciHI[i]*de + 0.5*h2formation_ncrd1[i]*h2formation_ncrn[i]*pow(h2formation_ncrn[i]/(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i]) + 1.0, -2.0)*(-H2_1*H_1*h2formation_h2mcool[i] + pow(H_1, 3)*h2formation_h2mheat[i])/pow(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i], 2) + 0.5*(-H2_1*h2formation_h2mcool[i] + 3*pow(H_1, 2)*h2formation_h2mheat[i])*1.0/(h2formation_ncrn[i]/(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i]) + 1.0);
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[2];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 10, 3) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 3 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H_2
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by H_2
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 1, 4 ) = -k11[i]*H2_1;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by H_2
        .       .    .         .     .    .       .     .    .      
   70,091   6,783    3    36,176     0    0   2,261     0    0      IJth(J, 2, 4 ) = k09[i]*H_1 + k11[i]*H2_1 + k17[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by H_2
        .       .    .         .     .    .       .     .    .      
   90,440   9,044    4    45,220   104    0   2,261     0    0      IJth(J, 3, 4 ) = k02[i]*de - k09[i]*H_1 + k11[i]*H2_1 + 2*k16[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by H_2
        .       .    .         .     .    .       .     .    .      
  108,528   9,044    4    56,525     0    0   2,261     0    0      IJth(J, 4, 4 ) = -k02[i]*de - k09[i]*H_1 - k11[i]*H2_1 - k16[i]*H_m0 - k17[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 4, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by H_2
        .       .    .         .     .    .       .     .    .      
   54,264   4,522    2    29,393     0    0   2,261     0    0      IJth(J, 5, 4 ) = -k16[i]*H_m0 - k17[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 5, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by H_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 4 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by H_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 7, 4 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by H_2
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 8, 4 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by H_2
        .       .    .         .     .    .       .     .    .      
   56,525   4,522    2    29,393     0    0   2,261     0    0      IJth(J, 9, 4 ) = -k02[i]*de + k17[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by H_2
        .       .    .         .     .    .       .     .    .      
  341,411  29,393   13   160,531     0    0  24,871     0    0      IJth(J, 10, 4 ) = -H2_1*gloverabel08_gaHp[i]*pow(gloverabel08_h2lte[i], 2)/(pow(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0, 2)*pow(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i], 2)) - brem_brem[i]*de - de*reHII_reHII[i];
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[3];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 10, 4) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915       0    0    22,610     0    0   2,261     0    0      IJth(J, 10, 4 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H_m0
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by H_m0
        .       .    .         .     .    .       .     .    .      
   49,742   4,522    2    27,132     2    0   2,261     0    0      IJth(J, 1, 5 ) = k08[i]*H_1 + k19[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by H_m0
        .       .    .         .     .    .       .     .    .      
   49,742   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 2, 5 ) = k17[i]*H_2 - k19[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by H_m0
        .       .    .         .     .    .       .     .    .      
  113,050   9,044    4    56,525     0    0   2,261     0    0      IJth(J, 3, 5 ) = -k08[i]*H_1 + k14[i]*de + k15[i]*H_1 + 2*k16[i]*H_2 + k19[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by H_m0
        .       .    .         .     .    .       .     .    .      
   54,264   4,522    2    29,393     0    0   2,261     0    0      IJth(J, 4, 5 ) = -k16[i]*H_2 - k17[i]*H_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 4, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by H_m0
        .       .    .         .     .    .       .     .    .      
  126,616   9,044    4    65,569     0    0   2,261     0    0      IJth(J, 5, 5 ) = -k08[i]*H_1 - k14[i]*de - k15[i]*H_1 - k16[i]*H_2 - k17[i]*H_2 - k19[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by H_m0
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 5 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by H_m0
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 7, 5 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by H_m0
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 8, 5 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by H_m0
        .       .    .         .     .    .       .     .    .      
   88,179   9,044    4    45,220     0    0   2,261     0    0      IJth(J, 9, 5 ) = k08[i]*H_1 + k14[i]*de + k15[i]*H_1 + k17[i]*H_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by H_m0
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 10, 5 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[4];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 10, 5) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915       0    0    22,610     0    0   2,261     0    0      IJth(J, 10, 5 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: He_1
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by He_1
        .       .    .         .     .    .       .     .    .      
   15,827   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 1, 6 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by He_1
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 2, 6 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by He_1
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 3, 6 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by He_1
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 4, 6 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 4, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by He_1
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 5, 6 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by He_1
        .       .    .         .     .    .       .     .    .      
   36,176   4,522    2    20,349     1    0   2,261     0    0      IJth(J, 6, 6 ) = -k03[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by He_1
        .       .    .         .     .    .       .     .    .      
   31,654   2,261    1    18,088     0    0   2,261     0    0      IJth(J, 7, 6 ) = k03[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by He_1
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 8, 6 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by He_1
        .       .    .         .     .    .       .     .    .      
   31,654   2,261    1    18,088     0    0   2,261   104    0      IJth(J, 9, 6 ) = k03[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by He_1
        .       .    .         .     .    .       .     .    .      
  323,323  27,132   12   151,487     0    0  24,871     0    0      IJth(J, 10, 6 ) = -H2_1*gloverabel08_gaHe[i]*pow(gloverabel08_h2lte[i], 2)/(pow(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0, 2)*pow(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i], 2)) - ciHeI_ciHeI[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[5];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 6) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 6 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: He_2
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by He_2
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 1, 7 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by He_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 2, 7 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by He_2
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 3, 7 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by He_2
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 4, 7 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 4, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by He_2
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 5, 7 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by He_2
        .       .    .         .     .    .       .     .    .      
   31,654   2,261    1    18,088     1    0   2,261     0    0      IJth(J, 6, 7 ) = k04[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by He_2
        .       .    .         .     .    .       .     .    .      
   54,264   4,522    2    29,393     1    0   2,261     0    0      IJth(J, 7, 7 ) = -k04[i]*de - k05[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by He_2
        .       .    .         .     .    .       .     .    .      
   31,654   2,261    1    18,088     0    0   2,261     0    0      IJth(J, 8, 7 ) = k05[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by He_2
        .       .    .         .     .    .       .     .    .      
   56,525   4,522    2    29,393     0    0   2,261     0    0      IJth(J, 9, 7 ) = -k04[i]*de + k05[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 9, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by He_2
        .       .    .         .     .    .       .     .    .      
  194,446  15,827    7    92,701     0    0  24,871     0    0      IJth(J, 10, 7 ) = -brem_brem[i]*de - ceHeII_ceHeII[i]*de - ceHeI_ceHeI[i]*pow(de, 2) - ciHeII_ciHeII[i]*de - ciHeIS_ciHeIS[i]*pow(de, 2) - de*reHeII1_reHeII1[i] - de*reHeII2_reHeII2[i];
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[6];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 7) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 7 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: He_3
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by He_3
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 1, 8 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by He_3
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 2, 8 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by He_3
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 3, 8 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by He_3
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 4, 8 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 4, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by He_3
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 5, 8 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by He_3
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 8 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by He_3
        .       .    .         .     .    .       .     .    .      
   31,654   2,261    1    18,088     1    0   2,261     0    0      IJth(J, 7, 8 ) = k06[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by He_3
        .       .    .         .     .    .       .     .    .      
   36,176   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 8, 8 ) = -k06[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 8, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by He_3
        .       .    .         .     .    .       .     .    .      
   36,176   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 9, 8 ) = -k06[i]*de;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 9, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by He_3
        .       .    .         .     .    .       .     .    .      
   54,264   2,261    1    29,393     0    0   2,261     0    0      IJth(J, 10, 8 ) = -4.0*brem_brem[i]*de - de*reHeIII_reHeIII[i];
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[7];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 8) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 8 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: de
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by de
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 1, 9 ) = -k12[i]*H2_1;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by de
        .       .    .         .     .    .       .     .    .      
   36,176   2,261    1    20,349     0    0   2,261     0    0      IJth(J, 2, 9 ) = -k18[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by de
        .       .    .         .     .    .       .     .    .      
  135,660  11,305    5    65,569   104    0   2,261     0    0      IJth(J, 3, 9 ) = -k01[i]*H_1 + k02[i]*H_2 - k07[i]*H_1 + 2*k12[i]*H2_1 + k14[i]*H_m0 + 2*k18[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by de
        .       .    .         .     .    .       .     .    .      
   49,742   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 4, 9 ) = k01[i]*H_1 - k02[i]*H_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 4, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by de
        .       .    .         .     .    .       .     .    .      
   49,742   2,261    1    27,132     0    0   2,261     0    0      IJth(J, 5, 9 ) = k07[i]*H_1 - k14[i]*H_m0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by de
        .       .    .         .     .    .       .     .    .      
   56,525   4,522    2    29,393     0    0   2,261     0    0      IJth(J, 6, 9 ) = -k03[i]*He_1 + k04[i]*He_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by de
        .       .    .         .     .    .       .     .    .      
   88,179   6,783    3    45,220     0    0   2,261     0    0      IJth(J, 7, 9 ) = k03[i]*He_1 - k04[i]*He_2 - k05[i]*He_2 + k06[i]*He_3;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by de
        .       .    .         .     .    .       .     .    .      
   49,742   2,261    1    27,132     0    0   2,261     0    0      IJth(J, 8, 9 ) = k05[i]*He_2 - k06[i]*He_3;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by de
        .       .    .         .     .    .       .     .    .      
  183,141  15,827    7    90,440     0    0   2,261     0    0      IJth(J, 9, 9 ) = k01[i]*H_1 - k02[i]*H_2 + k03[i]*He_1 - k04[i]*He_2 + k05[i]*He_2 - k06[i]*He_3 - k07[i]*H_1 + k14[i]*H_m0 - k18[i]*H2_2;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by de
        .       .    .         .     .    .       .     .    .      
  628,558  54,264   24   289,408     0    0  33,915     0    0      IJth(J, 10, 9 ) = -H2_1*gloverabel08_gael[i]*pow(gloverabel08_h2lte[i], 2)/(pow(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0, 2)*pow(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i], 2)) - H_1*ceHI_ceHI[i] - H_1*ciHI_ciHI[i] - H_2*reHII_reHII[i] - He_1*ciHeI_ciHeI[i] - He_2*ceHeII_ceHeII[i] - 2*He_2*ceHeI_ceHeI[i]*de - He_2*ciHeII_ciHeII[i] - 2*He_2*ciHeIS_ciHeIS[i]*de - He_2*reHeII1_reHeII1[i] - He_2*reHeII2_reHeII2[i] - He_3*reHeIII_reHeIII[i] - brem_brem[i]*(H_2 + He_2 + 4.0*He_3) - compton_comp_[i]*pow(z + 1.0, 4)*(T - 2.73*z - 2.73);
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[8];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 9) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 9 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: ge
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_1 by ge
        .       .    .         .     .    .       .     .    .      
   15,827       0    0     9,044     0    0   2,261     0    0      IJth(J, 1, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[0];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   33,915   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 1, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   42,959   2,261    1    27,132 2,261    0   2,261     0    0      IJth(J, 1, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H2_2 by ge
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 2, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[1];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 2, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 2, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_1 by ge
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 3, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[2];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 3, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   2,261    1    27,132     0    0   2,261     0    0      IJth(J, 3, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_2 by ge
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 4, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[3];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   4,522    2    24,871     0    0   2,261     0    0      IJth(J, 4, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   2,261    1    27,132     0    0   2,261     0    0      IJth(J, 4, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // H_m0 by ge
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 5, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[4];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 5, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 5, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_1 by ge
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 6, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[5];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 6, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   2,261    1    27,132     0    0   2,261     0    0      IJth(J, 6, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_2 by ge
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 7, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[6];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 7, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 7, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // He_3 by ge
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 8, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783   2,261    1     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[7];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 8, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   4,522    2    27,132     0    0   2,261     0    0      IJth(J, 8, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // de by ge
        .       .    .         .     .    .       .     .    .      
   18,088       0    0     9,044     0    0   2,261     0    0      IJth(J, 9, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[8];
    6,783   2,261    1     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 9, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   2,261    1    27,132     0    0   2,261     0    0      IJth(J, 9, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      // ge by ge
        .       .    .         .     .    .       .     .    .      
   18,088   2,261    1     9,044     0    0   2,261     0    0      IJth(J, 10, 10 ) = 0;
        .       .    .         .     .    .       .     .    .      
    6,783       0    0     4,522     0    0   2,261     0    0      inv_scale2 = data->inv_scale[9];
    6,783       0    0     4,522     0    0   2,261     0    0      scale1     = data->scale[9];
   38,437   2,261    1    24,871     0    0   2,261     0    0      IJth(J, 10, 10) *= inv_scale2*scale1;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   33,915   2,261    1    22,610     0    0   2,261     0    0      IJth(J, 10, 10 ) *= inv_mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   47,481   4,522    1    27,132     0    0   2,261     0    0      IJth(J, 10, 10 ) *= Tge[i];
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
    2,261       0    0         0     0    0       0     0    0      return 0;
    9,044       0    0     6,783     0    0       0     0    0  }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  int calculate_rhs_new_(realtype t, N_Vector y, N_Vector ydot, void *user_data)
  107,048  17,859    2         0     0    0  80,286     2    0  {
   26,762       0    0    13,381     0    0  13,381     0    0      new__data *data = (new__data* ) user_data;
        .       .    .         .     .    .       .     .    .      int i, j;
        .       .    .         .     .    .       .     .    .  
   13,381       0    0         0     0    0  13,381     0    0      int nchem = 10;
   13,381       0    0         0     0    0  13,381     0    0      int nstrip = 1;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      /* change N_Vector back to an array */
        .       .    .         .     .    .       .     .    .      double y_arr[ 10 ];
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905   7,829    1    53,524     0    0  13,381     0    0      y_arr[0] = NV_Ith_S(y , 0);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[0]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905       0    0    53,524     0    0  13,381     0    0      y_arr[1] = NV_Ith_S(y , 1);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[1]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905       0    0    53,524     0    0  13,381     0    0      y_arr[2] = NV_Ith_S(y , 2);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[2]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905  13,381    1    53,524     0    0  13,381     0    0      y_arr[3] = NV_Ith_S(y , 3);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[3]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905       0    0    53,524     0    0  13,381     0    0      y_arr[4] = NV_Ith_S(y , 4);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[4]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905       0    0    53,524     0    0  13,381     0    0      y_arr[5] = NV_Ith_S(y , 5);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[5]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905  13,381    1    53,524     0    0  13,381     0    0      y_arr[6] = NV_Ith_S(y , 6);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[6]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905       0    0    53,524     0    0  13,381     0    0      y_arr[7] = NV_Ith_S(y , 7);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[7]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905       0    0    53,524     0    0  13,381     0    0      y_arr[8] = NV_Ith_S(y , 8);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[8]);
        .       .    .         .     .    .       .     .    .      /* the variable is ALREADY scaled in "calculate temperature" */
   66,905   6,754    1    53,524     0    0  13,381     0    0      y_arr[9] = NV_Ith_S(y , 9);
        .       .    .         .     .    .       .     .    .      // fprintf(stderr, "scale: %.3g \n", data->scale[9]);
        .       .    .         .     .    .       .     .    .  
   80,286       0    0    40,143     0    0  13,381     1    0      new__calculate_temperature(data, y_arr , nstrip, nchem );
   66,905       0    0    26,762     0    0  13,381     0    0      new__interpolate_rates(data, nstrip);
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      /* Now we set up some temporaries */
   40,143  13,380    1    13,381     0    0  13,381   306    0      double *k01 = data->rs_k01;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k02 = data->rs_k02;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k03 = data->rs_k03;
   40,143  12,170    1    13,381     0    0  13,381     0    0      double *k04 = data->rs_k04;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k05 = data->rs_k05;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k06 = data->rs_k06;
   40,143  10,131    1    13,381     0    0  13,381    35    0      double *k07 = data->rs_k07;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k08 = data->rs_k08;
   40,143       0    0    13,381     0    0  13,381   172    0      double *k09 = data->rs_k09;
   40,143  13,381    1    13,381     0    0  13,381     0    0      double *k10 = data->rs_k10;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k11 = data->rs_k11;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k12 = data->rs_k12;
   40,143   7,035    1    13,381     0    0  13,381     0    0      double *k13 = data->rs_k13;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k14 = data->rs_k14;
   40,143       0    0    13,381     0    0  13,381    32    0      double *k15 = data->rs_k15;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k16 = data->rs_k16;
   40,143   6,217    1    13,381     0    0  13,381     9    0      double *k17 = data->rs_k17;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k18 = data->rs_k18;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k19 = data->rs_k19;
   40,143   6,217    1    13,381     0    0  13,381     0    0      double *k21 = data->rs_k21;
   40,143       0    0    13,381     0    0  13,381     0    0      double *k22 = data->rs_k22;
   40,143       0    0    13,381     0    0  13,381     0    0      double *brem_brem = data->cs_brem_brem;
   40,143   7,648    1    13,381     0    0  13,381     1    0      double *ceHeI_ceHeI = data->cs_ceHeI_ceHeI;
   40,143       0    0    13,381     0    0  13,381     0    0      double *ceHeII_ceHeII = data->cs_ceHeII_ceHeII;
   40,143       0    0    13,381     0    0  13,381     0    0      double *ceHI_ceHI = data->cs_ceHI_ceHI;
   40,143  13,379    1    13,381     0    0  13,381     0    0      double *ciHeI_ciHeI = data->cs_ciHeI_ciHeI;
   40,143       0    0    13,381     0    0  13,381     0    0      double *ciHeII_ciHeII = data->cs_ciHeII_ciHeII;
   40,143       0    0    13,381     0    0  13,381     0    0      double *ciHeIS_ciHeIS = data->cs_ciHeIS_ciHeIS;
   40,143   7,651    1    13,381     0    0  13,381     0    0      double *ciHI_ciHI = data->cs_ciHI_ciHI;
   40,143       0    0    13,381     0    0  13,381     0    0      double *compton_comp_ = data->cs_compton_comp_;
   40,143       0    0    13,381     0    0  13,381     1    0      double *gammah_gammah = data->cs_gammah_gammah;
   40,143       0    0    13,381     0    0  13,381     0    0      double *gloverabel08_gael = data->cs_gloverabel08_gael;
   40,143   7,653    1    13,381     0    0  13,381     1    0      double *gloverabel08_gaH2 = data->cs_gloverabel08_gaH2;
   40,143       0    0    13,381     0    0  13,381     0    0      double *gloverabel08_gaHe = data->cs_gloverabel08_gaHe;
   40,143       0    0    13,381     0    0  13,381     0    0      double *gloverabel08_gaHI = data->cs_gloverabel08_gaHI;
   40,143  13,379    1    13,381     0    0  13,381     0    0      double *gloverabel08_gaHp = data->cs_gloverabel08_gaHp;
   40,143       0    0    13,381     0    0  13,381     0    0      double *gloverabel08_gphdl = data->cs_gloverabel08_gphdl;
   40,143       0    0    13,381     0    0  13,381     0    0      double *gloverabel08_gpldl = data->cs_gloverabel08_gpldl;
   40,143   8,812    1    13,381     0    0  13,381     0    0      double *gloverabel08_h2lte = data->cs_gloverabel08_h2lte;
   40,143       0    0    13,381     0    0  13,381     0    0      double *h2formation_h2mcool = data->cs_h2formation_h2mcool;
   40,143       0    0    13,381     0    0  13,381     1    0      double *h2formation_h2mheat = data->cs_h2formation_h2mheat;
   40,143  13,380    1    13,381     0    0  13,381     0    0      double *h2formation_ncrd1 = data->cs_h2formation_ncrd1;
   40,143       0    0    13,381     0    0  13,381     0    0      double *h2formation_ncrd2 = data->cs_h2formation_ncrd2;
   40,143       0    0    13,381     0    0  13,381     0    0      double *h2formation_ncrn = data->cs_h2formation_ncrn;
   40,143   8,812    1    13,381     0    0  13,381     0    0      double *reHeII1_reHeII1 = data->cs_reHeII1_reHeII1;
   40,143       0    0    13,381     0    0  13,381     0    0      double *reHeII2_reHeII2 = data->cs_reHeII2_reHeII2;
   40,143       0    0    13,381     0    0  13,381     0    0      double *reHeIII_reHeIII = data->cs_reHeIII_reHeIII;
   40,143       0    0    13,381     0    0  13,381     0    0      double *reHII_reHII = data->cs_reHII_reHII;
        .       .    .         .     .    .       .     .    .      double H2_1;
        .       .    .         .     .    .       .     .    .      double H2_2;
        .       .    .         .     .    .       .     .    .      double H_1;
        .       .    .         .     .    .       .     .    .      double H_2;
        .       .    .         .     .    .       .     .    .      double H_m0;
        .       .    .         .     .    .       .     .    .      double He_1;
        .       .    .         .     .    .       .     .    .      double He_2;
        .       .    .         .     .    .       .     .    .      double He_3;
        .       .    .         .     .    .       .     .    .      double de;
        .       .    .         .     .    .       .     .    .      double ge;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      double z;
        .       .    .         .     .    .       .     .    .      double T;
        .       .    .         .     .    .       .     .    .  
   26,762  13,379    1         0     0    0  13,381     1    0      double mh = 1.67e-24;
        .       .    .         .     .    .       .     .    .      double mdensity;
        .       .    .         .     .    .       .     .    .      
   13,381       0    0         0     0    0  13,381     0    0      i = 0;
   80,286       0    0    40,143     0    0  13,381     0    0      T = data->Ts[i];
   40,143   5,166    1    26,762     0    0  13,381     0    0      z = data->current_z;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      double scale, inv_scale;
   13,381       0    0         0     0    0  13,381     0    0      int jj =0;
   80,286       0    0    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   80,286   7,720    1    66,905     0    0  13,381     0    0      H2_1 = NV_Ith_S( y,0 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286   5,167    1    40,143   327    0  13,381     0    0      mdensity += H2_1 * 2.01588;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667   7,114    1    66,905     0    0  13,381    65    0      H2_2 = NV_Ith_S( y,1 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      mdensity += H2_2 * 2.01588;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286   7,652    1    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667   6,609    1    66,905     0    0  13,381     0    0      H_1 = NV_Ith_S( y,2 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      mdensity += H_1 * 1.00794;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286   2,594    1    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667       0    0    66,905     0    0  13,381     1    0      H_2 = NV_Ith_S( y,3 )*scale;
   13,381   3,350    1    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      mdensity += H_2 * 1.00794;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286   7,652    1    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667       0    0    66,905     0    0  13,381     0    0      H_m0 = NV_Ith_S( y,4 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286   7,652    1    40,143     0    0  13,381     0    0      mdensity += H_m0 * 1.00794;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286   8,812    1    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667       0    0    66,905     0    0  13,381     0    0      He_1 = NV_Ith_S( y,5 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286   4,950    1    40,143     0    0  13,381     0    0      mdensity += He_1 * 4.002602;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667   5,084    1    66,905     0    0  13,381     0    0      He_2 = NV_Ith_S( y,6 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286   8,812    1    40,143     0    0  13,381     0    0      mdensity += He_2 * 4.002602;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667   6,610    1    66,905     0    0  13,381     0    0      He_3 = NV_Ith_S( y,7 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
   80,286   8,814    1    40,143     0    0  13,381     0    0      mdensity += He_3 * 4.002602;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667  13,381    1    66,905     0    0  13,381     0    0      de = NV_Ith_S( y,8 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
   80,286       0    0    40,143     0    0  13,381     0    0      scale = data->scale[jj];
   93,667  13,381    1    66,905     0    0  13,381   172    0      ge = NV_Ith_S( y,9 )*scale;
   13,381       0    0    13,381     0    0       0     0    0      jj++;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
   40,143       0    0    26,762     0    0  13,381     0    0      mdensity *= mh;
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H2_1
        .       .    .         .     .    .       .     .    .      //
1,257,814  51,503    9   669,050     2    0 147,191     0    0      NV_Ith_S(ydot, 0) = k08[i]*H_1*H_m0 + k10[i]*H2_2*H_1 - k11[i]*H2_1*H_2 - k12[i]*H2_1*de - k13[i]*H2_1*H_1 + k19[i]*H2_2*H_m0 + k21[i]*H2_1*pow(H_1, 2) + k22[i]*pow(H_1, 3);
        .       .    .         .     .    .       .     .    .   
   40,143       0    0    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[0];
  120,429   2,288    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 0) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "H2_1: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 0));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H2_2
        .       .    .         .     .    .       .     .    .      //
  789,479  17,901    5   441,573     0    0  13,381     0    0      NV_Ith_S(ydot, 1) = k09[i]*H_1*H_2 - k10[i]*H2_2*H_1 + k11[i]*H2_1*H_2 + k17[i]*H_2*H_m0 - k18[i]*H2_2*de - k19[i]*H2_2*H_m0;
        .       .    .         .     .    .       .     .    .   
   40,143       0    0    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[1];
  147,191  13,377    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 1) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "H2_2: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 1));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H_1
        .       .    .         .     .    .       .     .    .      //
2,395,199 173,911   16 1,217,671    14    0 147,191     0    0      NV_Ith_S(ydot, 2) = -k01[i]*H_1*de + k02[i]*H_2*de - k07[i]*H_1*de - k08[i]*H_1*H_m0 - k09[i]*H_1*H_2 - k10[i]*H2_2*H_1 + k11[i]*H2_1*H_2 + 2*k12[i]*H2_1*de + 2*k13[i]*H2_1*H_1 + k14[i]*H_m0*de + k15[i]*H_1*H_m0 + 2*k16[i]*H_2*H_m0 + 2*k18[i]*H2_2*de + k19[i]*H2_2*H_m0 - 2*k21[i]*H2_1*pow(H_1, 2) - 2*k22[i]*pow(H_1, 3);
        .       .    .         .     .    .       .     .    .   
   40,143       0    0    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[2];
  147,191  10,131    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 2) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "H_1: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 2));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H_2
        .       .    .         .     .    .       .     .    .      //
  909,908  40,498    5   508,478     0    0  13,381     0    0      NV_Ith_S(ydot, 3) = k01[i]*H_1*de - k02[i]*H_2*de - k09[i]*H_1*H_2 + k10[i]*H2_2*H_1 - k11[i]*H2_1*H_2 - k16[i]*H_2*H_m0 - k17[i]*H_2*H_m0;
        .       .    .         .     .    .       .     .    .   
   40,143  13,379    1    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[3];
  147,191   7,651    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 3) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "H_2: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 3));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: H_m0
        .       .    .         .     .    .       .     .    .      //
  896,527  52,036    5   508,478     0    0  13,381     2    0      NV_Ith_S(ydot, 4) = k07[i]*H_1*de - k08[i]*H_1*H_m0 - k14[i]*H_m0*de - k15[i]*H_1*H_m0 - k16[i]*H_2*H_m0 - k17[i]*H_2*H_m0 - k19[i]*H2_2*H_m0;
        .       .    .         .     .    .       .     .    .   
   40,143  13,379    1    26,762   151    0  13,381     0    0      inv_scale = data->inv_scale[4];
  147,191       0    0   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 4) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "H_m0: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 4));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: He_1
        .       .    .         .     .    .       .     .    .      //
  334,525  12,886    2   187,334     0    0  13,381     0    0      NV_Ith_S(ydot, 5) = -k03[i]*He_1*de + k04[i]*He_2*de;
        .       .    .         .     .    .       .     .    .   
   40,143   5,167    1    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[5];
  147,191       0    0   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 5) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "He_1: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 5));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: He_2
        .       .    .         .     .    .       .     .    .      //
  548,621  23,969    4   307,763     0    0  13,381     0    0      NV_Ith_S(ydot, 6) = k03[i]*He_1*de - k04[i]*He_2*de - k05[i]*He_2*de + k06[i]*He_3*de;
        .       .    .         .     .    .       .     .    .   
   40,143       0    0    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[6];
  147,191   3,350    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 6) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "He_2: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 6));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: He_3
        .       .    .         .     .    .       .     .    .      //
  294,382   7,652    1   173,953     0    0  13,381     0    0      NV_Ith_S(ydot, 7) = k05[i]*He_2*de - k06[i]*He_3*de;
        .       .    .         .     .    .       .     .    .   
   40,143   7,652    1    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[7];
  147,191   8,812    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 7) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "He_3: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 7));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: de
        .       .    .         .     .    .       .     .    .      //
1,538,815  73,828    9   843,003     0    0  13,381     0    0      NV_Ith_S(ydot, 8) = k01[i]*H_1*de - k02[i]*H_2*de + k03[i]*He_1*de - k04[i]*He_2*de + k05[i]*He_2*de - k06[i]*He_3*de - k07[i]*H_1*de + k08[i]*H_1*H_m0 + k14[i]*H_m0*de + k15[i]*H_1*H_m0 + k17[i]*H_2*H_m0 - k18[i]*H2_2*de;
        .       .    .         .     .    .       .     .    .   
   40,143       0    0    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[8];
  147,191  13,377    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 8) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "de: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 8));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //
        .       .    .         .     .    .       .     .    .      // Species: ge
        .       .    .         .     .    .       .     .    .      //
4,415,730 232,807   29 2,074,055 1,262    1 414,811     0    0      NV_Ith_S(ydot, 9) = (-H2_1*gloverabel08_h2lte[i]/(gloverabel08_h2lte[i]/(H2_1*gloverabel08_gaH2[i] + H_1*gloverabel08_gaHI[i] + H_2*gloverabel08_gaHp[i] + He_1*gloverabel08_gaHe[i] + de*gloverabel08_gael[i]) + 1.0) - H_1*ceHI_ceHI[i]*de - H_1*ciHI_ciHI[i]*de - H_2*de*reHII_reHII[i] - He_1*ciHeI_ciHeI[i]*de - He_2*ceHeII_ceHeII[i]*de - He_2*ceHeI_ceHeI[i]*pow(de, 2) - He_2*ciHeII_ciHeII[i]*de - He_2*ciHeIS_ciHeIS[i]*pow(de, 2) - He_2*de*reHeII1_reHeII1[i] - He_2*de*reHeII2_reHeII2[i] - He_3*de*reHeIII_reHeIII[i] - brem_brem[i]*de*(H_2 + He_2 + 4.0*He_3) - compton_comp_[i]*de*pow(z + 1.0, 4)*(T - 2.73*z - 2.73) + 0.5*1.0/(h2formation_ncrn[i]/(H2_1*h2formation_ncrd2[i] + H_1*h2formation_ncrd1[i]) + 1.0)*(-H2_1*H_1*h2formation_h2mcool[i] + pow(H_1, 3)*h2formation_h2mheat[i]))*fmin(1.00000000000000, (1.0 - exp(-fmax(1.00000000000000e-5, mdensity)))/fmax(1.00000000000000e-5, mdensity));
        .       .    .         .     .    .       .     .    .   
   40,143       0    0    26,762     0    0  13,381     0    0      inv_scale = data->inv_scale[9];
  147,191  10,131    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 9) *= inv_scale;
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .      
  147,191  13,381    1   107,048     0    0  13,381     0    0      NV_Ith_S(ydot, 9) /= mdensity;
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ge: %0.5g\n", scale);
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "ydot = %0.5g \n", NV_Ith_S(ydot, 9));
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      //fprintf(stderr, "----------------\n");
        .       .    .         .     .    .       .     .    .      
   13,381       0    0         0     0    0       0     0    0      return 0;
   53,524       0    0    40,143   402    0       0     0    0      }
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  
        .       .    .         .     .    .       .     .    .  int new__solve_chemistry_dt( dengo_field_data *field_data, 
        .       .    .         .     .    .       .     .    .  new__data *data, double dt ){
        .       .    .         .     .    .       .     .    .      
        .       .    .         .     .    .       .     .    .      int i, j;
-- line 3378 ----------------------------------------

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  /build/eglibc-ripdx6/eglibc-2.19/math/w_pow.c
  /build/eglibc-ripdx6/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../strcmp.S
  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/wordsize-64/math_private.h
  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/i386/fpu/fenv_private.h
  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_log.c
  /build/eglibc-ripdx6/eglibc-2.19/malloc/malloc.c
  /build/eglibc-ripdx6/eglibc-2.19/string/../sysdeps/x86_64/memset.S
  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_exp.c
  /build/eglibc-ripdx6/eglibc-2.19/math/../sysdeps/ieee754/dbl-64/e_pow.c
  /build/eglibc-ripdx6/eglibc-2.19/elf/dl-lookup.c
  /build/eglibc-ripdx6/eglibc-2.19/elf/../sysdeps/generic/dl-hash.h
  /build/eglibc-ripdx6/eglibc-2.19/math/w_log.c

--------------------------------------------------------------------------------
Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw 
--------------------------------------------------------------------------------
24   61   14 26   33    0 23   21    0  percentage of events annotated

